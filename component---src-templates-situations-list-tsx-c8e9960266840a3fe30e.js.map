{"version":3,"sources":["webpack:///./src/components/button/variants.module.scss","webpack:///./src/components/schema/index.tsx","webpack:///./src/components/headline/headline.tsx","webpack:///./src/components/list-card/list-card.tsx","webpack:///./src/templates/situations/list.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/components/list-card/measure-list-card.module.scss","webpack:///./src/components/breadcrumb/breadcrumb.module.scss","webpack:///./src/components/button/button.tsx"],"names":["module","exports","children","className","styles","headline","title","description","link","to","classNames","buttonWrapper","text","I18n","variant","query","data","pageContext","area","situations","collator","Intl","a","b","pagePath","url","langCode","isBlogPost","items","id","meta_description","path","key","alias","getBreadcrumbClasses","classes","getItemClasses","index","aria-label","item","isNavItem","label","getClass","btn","onClick","href","disabled","icon","linkTitle","type","dataTestId"],"mappings":"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","file":"component---src-templates-situations-list-tsx-c8e9960266840a3fe30e.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-small-black\":\"variants-module--btn-small-black--398fP\",\"btnSmallBlack\":\"variants-module--btn-small-black--398fP\"};","export { default } from './schema';\n","import React from 'react';\n\nimport styles from './headline.module.scss';\n\nconst Headline: React.FC = ({ children }) => {\n  return <h1 className={styles.headline}>{children}</h1>;\n};\n\nexport default Headline;\n","import React from 'react';\nimport Button from '@/components/button';\nimport Link from '@/components/link';\nimport I18n from '@/components/i18n';\nimport styles from './measure-list-card.module.scss';\nimport classNames from 'classnames';\n\ninterface IProps {\n  title: string;\n  link: string;\n  description: string;\n}\n\nconst ListCard: React.FC<IProps> = ({ title, description, link }) => (\n  <Link\n    to={link}\n    className={classNames(\n      'card p-2 mb-2 text-decoration-none',\n      styles.listItem,\n    )}\n  >\n    <h2 className=\"font-weight-medium mb-1\">{title}</h2>\n    <div className=\"d-flex justify-content-between align-items-end\">\n      <p className=\"m-0 color-gray\">{description}</p>\n      <div className={styles.buttonWrapper}>\n        <Button text={I18n('detail')} variant=\"outline\" />\n      </div>\n    </div>\n  </Link>\n);\n\nexport default ListCard;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { IQuery, ISitePageContext } from 'graphql-types';\nimport Container from '@/components/container';\n\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport Headline from '@/components/headline';\nimport ListCard from '@/components/list-card';\nimport Layout from '@/layouts/default-layout';\nimport Breadcrumb from '@/components/breadcrumb';\nimport I18n from '@/components/i18n';\nimport SchemaComp from '@/components/schema';\n\ninterface IProps {\n  data: IQuery;\n  pageContext: ISitePageContext;\n}\n\nconst SituationList: React.FC<IProps> = ({ data, pageContext }) => {\n  const { area } = data;\n  const situations = area.relationships?.situation || [];\n\n  const collator = new Intl.Collator([pageContext.langCode]);\n  situations.sort((a, b) => collator.compare(a.title, b.title));\n\n  return (\n    <Layout pageContext={pageContext}>\n      <Seo\n        title={area.name}\n        description={I18n('situations_overview_meta')}\n        pagePath=\"/situations\"\n      />\n      <SchemaComp\n        url={'https://covid.gov.cz' + pageContext.slug}\n        langCode={pageContext.langCode}\n        isBlogPost={false}\n        title={area.name}\n        description={I18n('situations_overview_meta')}\n      />\n      <Container>\n        <div className=\"pt-1\">\n          <Breadcrumb\n            items={[\n              { title: I18n('home'), url: '/' },\n              {\n                title: I18n('life_situations'),\n                url: I18n('slug_situations'),\n              },\n              area.name,\n            ]}\n            variant=\"inverse\"\n          />\n        </div>\n        <div className=\"mt-3\">\n          <Headline>{area.name}</Headline>\n        </div>\n        <div>\n          {situations.map(\n            ({ id, title, meta_description, path }) => {\n              return (\n                <ListCard\n                  title={title}\n                  description={meta_description}\n                  key={`area-list-item-${id}`}\n                  link={path?.alias}\n                />\n              );\n            },\n          )}\n        </div>\n      </Container>\n    </Layout>\n  );\n};\nexport default SituationList;\n\nexport const query = graphql`\n  query($slug: String!) {\n    area(path: { alias: { eq: $slug } }) {\n      name\n      relationships {\n        situation {\n          id\n          title\n          meta_description\n          path {\n            alias\n          }\n        }\n      }\n    }\n  }\n`;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  label={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"headline-module--headline--2EZlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"measure-list-card-module--listItem--2NERh\",\"buttonWrapper\":\"measure-list-card-module--buttonWrapper--3V2sV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './variants.module.scss';\n\nimport Link from '@/components/link';\n\nconst getClass = (variant: ButtonVariant, additionalClass?: string): string => {\n  return classNames(\n    { btn: variant !== 'small-black' },\n    { 'btn-primary': variant === 'contained' },\n    { 'btn-outline-primary': variant === 'outline' },\n    { 'btn-outline-dark': variant === 'outline-black' },\n    { 'btn-outline-yellow': variant === 'outline-yellow' },\n    { 'btn-yellow': variant === 'yellow' },\n    { 'text-black': variant === 'outline-black' },\n    { 'btn-secondary': variant === 'secondary' },\n    { [styles.btnSmallBlack]: variant === 'small-black' },\n    { [additionalClass]: additionalClass },\n  );\n};\n\nexport type ButtonVariant =\n  | 'contained'\n  | 'outline'\n  | 'yellow'\n  | 'secondary'\n  | 'outline-black'\n  | 'outline-yellow'\n  | 'small-black';\n\ninterface IProps {\n  text?: string;\n  variant?: ButtonVariant;\n  className?: string;\n  onClick?: () => void;\n  href?: string;\n  disabled?: boolean;\n  icon?: React.ReactNode;\n  linkTitle?: string;\n}\n\nconst Button: React.FC<IProps> = ({\n  variant,\n  onClick,\n  text,\n  href = '',\n  className,\n  disabled = false,\n  icon,\n  linkTitle = '',\n}) => {\n  if (href !== '' && !disabled) {\n    return (\n      <Link to={href} label={linkTitle} dataTestId=\"button-link\">\n        <button\n          type=\"button\"\n          className={getClass(variant, className)}\n          onClick={onClick || null}\n          disabled={disabled}\n        >\n          {text}\n          {icon}\n        </button>\n      </Link>\n    );\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={getClass(variant, className)}\n      onClick={onClick || null}\n      disabled={disabled}\n    >\n      {text}\n      {icon}\n    </button>\n  );\n};\n\nexport default Button;\n"],"sourceRoot":""}
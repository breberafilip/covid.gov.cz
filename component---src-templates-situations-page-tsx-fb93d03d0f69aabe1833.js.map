{"version":3,"sources":["webpack:///./src/components/schema/schema.tsx","webpack:///./src/components/situation-detail/situation-detail.module.scss","webpack:///./node_modules/@material-ui/icons/esm/Room.js","webpack:///./node_modules/@material-ui/icons/esm/Event.js","webpack:///./node_modules/@material-ui/icons/esm/Clear.js","webpack:///./node_modules/@material-ui/icons/esm/Add.js","webpack:///./src/components/accordion/accordion-section.tsx","webpack:///./src/components/accordion/accordion.tsx","webpack:///./src/components/situation-detail/situation-detail.tsx","webpack:///./src/components/time/time.tsx","webpack:///./src/components/headline/headline.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./node_modules/@material-ui/icons/esm/KeyboardArrowRight.js","webpack:///./src/components/link-styled/link-styled.module.scss","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/components/accordion/accordion-section.module.scss","webpack:///./src/components/breadcrumb/breadcrumb.module.scss","webpack:///./src/components/link-styled/linkStyled.tsx","webpack:///./src/components/link-list/link-list.tsx","webpack:///./src/templates/situations/page.tsx"],"names":["SchemaComp","canonicalUrl","datePublished","defaultTitle","description","isBlogPost","organization","title","body","url","baseSchema","name","alternateName","schema","itemListElement","position","item","articleBody","headline","publisher","mainEntityOfPage","property","content","type","JSON","module","exports","createSvgIcon","createElement","d","text","useState","opened","setOpened","toggleSection","useCallback","className","styles","section","classNames","onClick","icon","variant","sectionContent","data","key","index","situation","situationDetail","items","I18n","alias","dangerouslySetInnerHTML","__html","processed","to","link","uri","datetime","prefix","boldedTitleCount","value","suffix","dateTime","Date","toLocaleString","year","month","day","hour","minute","timeZone","children","getBreadcrumbClasses","classes","getItemClasses","aria-label","isNavItem","label","linkStyled","linkStyledLink","style","fontSize","linkStyledIcon","links","query","linksData","pagePath","htmlLanguage","langcode"],"mappings":"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","file":"component---src-templates-situations-page-tsx-fb93d03d0f69aabe1833.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\n\ninterface IOrganization {\n  url: string;\n  name: string;\n}\ninterface IProps {\n  canonicalUrl: string;\n  body: string;\n  datePublished: string;\n  defaultTitle: string;\n  description: string;\n  isBlogPost: boolean;\n  organization: IOrganization;\n  title: string;\n  url: string;\n}\nexport const SchemaComp: React.FC<IProps> = ({\n  canonicalUrl,\n  datePublished,\n  defaultTitle,\n  description,\n  isBlogPost,\n  organization,\n  title,\n  body,\n  url,\n}) => {\n  const baseSchema = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url,\n      name: title,\n      alternateName: defaultTitle,\n    },\n  ];\n\n  const schema = isBlogPost\n    ? [\n        ...baseSchema,\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': url,\n                name: title,\n              },\n            },\n          ],\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BlogPosting',\n          url,\n          name: title,\n          articleBody: body,\n          alternateName: defaultTitle,\n          headline: title,\n          description,\n          publisher: {\n            '@type': 'Organization',\n            url: organization.url,\n            name: organization.name,\n          },\n          mainEntityOfPage: {\n            '@type': 'WebSite',\n            '@id': canonicalUrl,\n          },\n          datePublished,\n        },\n      ]\n    : baseSchema;\n\n  return (\n    <Helmet>\n      {/* Schema.org tags */}\n      <meta property=\"og:url\" content={url} />\n      {isBlogPost ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <script type=\"application/ld+json\">{JSON.stringify(schema)}</script>\n    </Helmet>\n  );\n};\n\nexport default SchemaComp;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"situationDetail\":\"situation-detail-module--situationDetail--FlH1Z\"};","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Room');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"\n}), 'Event');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport { Add, Clear } from '@material-ui/icons';\n\nimport styles from './accordion-section.module.scss';\nimport Button from '@/components/button';\n\nexport interface Section {\n  title: string;\n  text: string;\n}\n\nconst AccordionSection: React.FC<Section> = ({ title, text }) => {\n  const [opened, setOpened] = useState(false);\n\n  const toggleSection = useCallback(() => {\n    setOpened(!opened);\n  }, [opened]);\n\n  return (\n    <div className={styles.section}>\n      <div\n        className={classNames(\n          styles.sectionHeading,\n          'd-flex',\n          'justify-content-between',\n          'align-items-center',\n        )}\n        onClick={toggleSection}\n      >\n        {title}\n        <Button\n          icon={opened ? <Clear /> : <Add />}\n          className={classNames(\n            styles.sectionButton,\n            'd-flex',\n            'justify-content-center',\n            'align-items-center',\n          )}\n          variant=\"yellow\"\n        />\n      </div>\n      {opened && <div className={styles.sectionContent}>{text}</div>}\n    </div>\n  );\n};\n\nexport default AccordionSection;\n","import React from 'react';\nimport AccordionSection, {\n  Section,\n} from '@/components/accordion/accordion-section';\n\ninterface Props {\n  data: Section[];\n}\n\nconst Accordion: React.FC<Props> = ({ data }) => {\n  return (\n    <>\n      {data.map((item, index) => (\n        <AccordionSection key={index} {...item} />\n      ))}\n    </>\n  );\n};\n\nexport default Accordion;\n","import React from 'react';\n\nimport { Room, Event } from '@material-ui/icons';\n\nimport Container from '@/components/container';\nimport Link from '@/components/link';\nimport Breadcrumb from '@/components/breadcrumb';\nimport Headline from '@/components/headline';\nimport Time from '@/components/time';\nimport I18n from '@/components/i18n';\n\nimport styles from './situation-detail.module.scss';\nimport Accordion from '../accordion';\nimport ContentBox from '../content-box';\nimport { ISituation } from '../../../graphql-types';\n\ninterface Region {\n  name: string;\n}\n\ninterface Link {\n  uri: string;\n  title?: string;\n}\n\ninterface IProps {\n  situation: ISituation;\n  type: string;\n}\n\nconst SituationDetail: React.FC<IProps> = ({ situation, type }) => {\n  return (\n    <div className={styles.situationDetail}>\n      <Container>\n        <div className=\"pt-1\">\n          <Breadcrumb\n            items={[\n              { title: I18n('home'), url: '/' },\n              {\n                title: I18n(\n                  type === 'measure' ? 'current_measures' : 'life_situations',\n                ),\n                url: I18n(`slug_${type}s`),\n              },\n              {\n                title: situation.relationships?.situation_type?.name,\n                url: situation.relationships?.situation_type?.path?.alias,\n              },\n              situation.title,\n            ]}\n            variant=\"inverse\"\n          />\n        </div>\n        <div className=\"mt-3\">\n          <Headline>{situation.title}</Headline>\n        </div>\n        <article className=\"bg-white rounded p-2 pb-3 mb-1\">\n          <div\n            dangerouslySetInnerHTML={{\n              __html: situation?.content?.processed,\n            }}\n          />\n\n          {situation.links?.length ? (\n            <div className=\"mt-2\">\n              <h3 className=\"mb-1 color-blue-dark\">{I18n('related')}</h3>\n              <div>\n                {situation.links.map((link, index) => (\n                  <div key={index}>\n                    <Link className=\"color-blue mb-1\" to={link.uri}>\n                      {link.title}\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ) : (\n            ''\n          )}\n\n          {situation.relationships?.region.length ? (\n            <div className=\"mt-2\">\n              <h3 className=\"mb-1 color-blue-dark\">\n                {I18n('location_validity')}\n              </h3>\n              <div className=\"d-flex align-items-center color-blue mb-1\">\n                <Room />\n                &nbsp;\n                <span className=\"text-uppercase font-weight-medium\">\n                  {situation.relationships.region\n                    .map((item) => item.name)\n                    .join(', ')}\n                </span>\n              </div>\n            </div>\n          ) : (\n            ''\n          )}\n\n          {situation.valid_from || situation.valid_to ? (\n            <div className=\"d-flex align-items-center color-blue\">\n              <Event />\n              &nbsp;\n              <span className=\"text-uppercase font-weight-medium\">\n                {situation.valid_from && (\n                  <Time\n                    datetime={situation.valid_from}\n                    prefix={`${I18n('from')} `}\n                  />\n                )}\n\n                {situation.valid_to && (\n                  <Time\n                    datetime={situation.valid_to}\n                    prefix={`${I18n('to')} `}\n                  />\n                )}\n              </span>\n            </div>\n          ) : (\n            ''\n          )}\n\n          {/* <p className=\"mt-2 text-muted font-italic\">\n            Naposledy bylo toto téma aktualizováno {situation.changed}\n          </p> */}\n        </article>\n\n        {situation.questions_answers?.length ? (\n          // TODO: localize\n          <ContentBox variant=\"blue\" title={I18n('faq')} boldedTitleCount={2}>\n            <Accordion\n              data={situation.questions_answers.map((item) => ({\n                title: item.question,\n                text: item.value,\n              }))}\n            />\n          </ContentBox>\n        ) : (\n          ''\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default SituationDetail;\n","import React from 'react';\n\ninterface Props {\n  datetime: string;\n  prefix?: string;\n  suffix?: string;\n}\n\nconst Time: React.FC<Props> = ({ datetime, prefix, suffix = ' ' }) => {\n  return (\n    <time dateTime={datetime}>\n      {prefix}\n      {new Date(datetime).toLocaleString('cs-CZ', {\n        year: 'numeric',\n        month: 'numeric',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        timeZone: 'GMT',\n      })}\n      {suffix}\n    </time>\n  );\n};\n\nexport default Time;\n","import React from 'react';\n\nimport styles from './headline.module.scss';\n\nconst Headline: React.FC = ({ children }) => {\n  return <h1 className={styles.headline}>{children}</h1>;\n};\n\nexport default Headline;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  label={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkStyled\":\"link-styled-module--linkStyled--_N7FG\",\"linkStyledLink\":\"link-styled-module--linkStyledLink--2U7Xp\",\"linkStyledIcon\":\"link-styled-module--linkStyledIcon--1ApnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"headline-module--headline--2EZlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"accordion-section-module--section--BMIm5\",\"sectionHeading\":\"accordion-section-module--sectionHeading--1aw0-\",\"sectionButton\":\"accordion-section-module--sectionButton--1rqdf\",\"sectionContent\":\"accordion-section-module--sectionContent--3m_BR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};","import React from 'react';\nimport Link from '@/components/link';\nimport styles from './link-styled.module.scss';\nimport { KeyboardArrowRight } from '@material-ui/icons';\n\ninterface Props {\n  label: string;\n  to: string;\n}\n\nconst LinkStyled: React.FC<Props> = ({ to, label }) => {\n  return (\n    <p className={styles.linkStyled}>\n      <Link to={to} label={label} className={styles.linkStyledLink}>\n        {label}\n        <KeyboardArrowRight\n          style={{ fontSize: 20 }}\n          className={styles.linkStyledIcon}\n        />\n      </Link>\n    </p>\n  );\n};\n\nexport default LinkStyled;\n","import React from 'react';\nimport LinkStyled from '@/components/link-styled';\n\ninterface Props {\n  links: Array<{\n    path?: { alias?: string; langcode?: string };\n    title?: string;\n  }>;\n}\n\nconst LinkList: React.FC<Props> = ({ links }) => {\n  return (\n    <div>\n      {links.length !== 0\n        ? links.map((link, i) => (\n            <LinkStyled key={i} label={link.title} to={link.path.alias} />\n          ))\n        : ''}\n    </div>\n  );\n};\n\nexport default LinkList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { IQuery } from 'graphql-types';\nimport Layout from '@/layouts/default-layout';\nimport SituationDetail from '@/components/situation-detail/situation-detail';\nimport ContentBox from '@/components/content-box';\nimport LinkList from '@/components/link-list';\nimport Container from '@/components/container';\nimport { SchemaComp } from '@/components/schema/schema';\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport I18n from '@/components/i18n';\n\ninterface IProps {\n  data: IQuery;\n}\n\nconst Page: React.FC<IProps> = ({ data }) => {\n  const linksData = data.situation.relationships.related_situations;\n  return (\n    <Layout>\n      <Seo\n        title={data.situation.title}\n        description={\n          data.situation.meta_description ||\n          I18n('current_measures_overview_meta')\n        }\n        pagePath={data.situation.path.alias}\n        htmlLanguage={data.situation.langcode}\n      />\n      <SchemaComp\n        canonicalUrl={'https://covid.gov.cz' + data.situation.path.alias}\n        datePublished={data.situation.valid_from}\n        defaultTitle={data.situation.title}\n        isBlogPost\n        description={data.situation.meta_description}\n        body={data.situation.content.processed}\n        title={data.situation.title}\n        url={'https://covid.gov.cz' + data.situation.path.alias}\n        organization={{\n          url: 'https://gov.cz',\n          name: 'Portál veřejné správy',\n        }}\n      />\n      <SituationDetail situation={data.situation} type=\"situation\" />\n      <Container className=\"pt-1\">\n        {/* hide this box if no relevant topics exist */}\n        {linksData.length > 0 ? (\n          <ContentBox\n            title={I18n('similar_topics')}\n            boldedTitleCount={1}\n            variant=\"blue\"\n          >\n            <LinkList links={linksData} />\n          </ContentBox>\n        ) : (\n          ''\n        )}\n        ;\n      </Container>\n    </Layout>\n  );\n};\nexport default Page;\n\nexport const query = graphql`\n  query($slug: String!) {\n    situation(path: { alias: { eq: $slug } }) {\n      title\n      status\n      meta_description\n      content {\n        processed\n      }\n      questions_answers {\n        question\n        value\n      }\n      links {\n        uri\n        title\n      }\n      relationships {\n        region {\n          name\n        }\n        situation_type {\n          name\n          path {\n            alias\n          }\n        }\n        related_situations {\n          title\n          path {\n            alias\n            langcode\n          }\n        }\n      }\n      path {\n        alias\n      }\n      changed\n      valid_from\n      valid_to\n    }\n  }\n`;\n"],"sourceRoot":""}
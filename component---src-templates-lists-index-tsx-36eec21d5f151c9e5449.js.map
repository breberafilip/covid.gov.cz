{"version":3,"sources":["webpack:///./src/components/search-box/search-box.module.scss","webpack:///./src/components/measure-list/measure.module.scss","webpack:///./src/components/button/variants.module.scss","webpack:///./src/components/desktop-top-content/desktop-top-content.module.scss","webpack:///./src/components/time/time.tsx","webpack:///./src/components/measure-list/measure.tsx","webpack:///./src/components/measure-list/measure-list.tsx","webpack:///./src/components/situations-box/situation.tsx","webpack:///./src/components/situations-box/situations-box.tsx","webpack:///./src/components/guide/guide-item.tsx","webpack:///./src/components/guide/guide.tsx","webpack:///./src/components/gov-icon/gov-icon.tsx","webpack:///./src/components/search-box/search-box.tsx","webpack:///./src/components/desktop-top-content/desktop-top-content.tsx","webpack:///./src/templates/lists/index.tsx","webpack:///./node_modules/@material-ui/icons/esm/KeyboardArrowRight.js","webpack:///./src/components/guide/guide.module.scss","webpack:///./src/components/situations-box/situation.module.scss","webpack:///./src/components/guide/guide-item.module.scss","webpack:///./src/components/content-icon/content-icon.tsx","webpack:///./src/components/content-box/content-box.module.scss","webpack:///./src/components/content-box/content-box.tsx","webpack:///./src/components/situations-box/situations-box.module.scss","webpack:///./src/components/button/button.tsx"],"names":["module","exports","datetime","prefix","suffix","dateTime","Date","toLocaleString","year","month","day","hour","minute","timeZone","title","description","area","validFrom","validTo","link","className","styles","measure","measureTitle","measureDescription","measureDetails","measureDetail","I18n","to","label","text","variant","measureButton","measures","descriptions","maxItems","useMobile","id","path","valid_from","valid_to","relationships","key","item","situation","name","iconCode","situationTitle","code","style","fontSize","situations","buttonUrl","buttonText","col","colSm","colLg","height","classNames","classes","href","linkTitle","isSituation","x","items","buttonHref","itemDescriptions","isMobile","isSituationBox","boldedTitleCount","dangerouslySetInnerHTML","__html","icon","size","tooltip","placeholder","onSearch","useState","search","setSearch","handleSearch","console","classnames","type","onChange","event","value","onKeyDown","onClick","subtitle","showSearch","colMd","colXl","query","homepage","data","situation_label","situation_text","langcode","measure_description","situation_description","meta_description","situation_link","measure_label","measure_link","measure_text","measure_items","situation_items","pagePath","htmlLanguage","schema","createElement","d","iconClassName","children","buttonVariant","noPadding","contentBoxDescription","getClass","btn","disabled","dataTestId"],"mappings":"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","file":"component---src-templates-lists-index-tsx-36eec21d5f151c9e5449.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"search-box-module--searchBox--1QskT\",\"searchBoxInput\":\"search-box-module--searchBoxInput--1txFT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"measure\":\"measure-module--measure--WXIA3\",\"measureTitle\":\"measure-module--measureTitle--3X-J0\",\"measureDescription\":\"measure-module--measureDescription--2X56J\",\"measureDetails\":\"measure-module--measureDetails--2Ht0C\",\"measureDetail\":\"measure-module--measureDetail--1sbVr\",\"measureButton\":\"measure-module--measureButton--MP9hB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-small-black\":\"variants-module--btn-small-black--398fP\",\"btnSmallBlack\":\"variants-module--btn-small-black--398fP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"desktop-top-content-module--title--1qAHI\",\"subtitle\":\"desktop-top-content-module--subtitle--1R9GZ\"};","import React from 'react';\n\ninterface Props {\n  datetime: string;\n  prefix?: string;\n  suffix?: string;\n}\n\nconst Time: React.FC<Props> = ({ datetime, prefix, suffix = ' ' }) => {\n  return (\n    <time dateTime={datetime}>\n      {prefix}\n      {new Date(datetime).toLocaleString('cs-CZ', {\n        year: 'numeric',\n        month: 'numeric',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        timeZone: 'Europe/Prague',\n      })}\n      {suffix}\n    </time>\n  );\n};\n\nexport default Time;\n","import React from 'react';\n\nimport styles from './measure.module.scss';\nimport Button from '@/components/button';\nimport I18n from '@/components/i18n';\nimport Time from '@/components/time';\nimport Link from '@/components/link';\n\ninterface Props {\n  title: string;\n  description: string;\n  area: string;\n  validFrom: string;\n  validTo: string;\n  link: string;\n}\n\nconst Measure: React.FC<Props> = ({\n  title,\n  description,\n  area,\n  validFrom,\n  validTo,\n  link,\n}) => {\n  return (\n    <div className={styles.measure}>\n      <h3 className={styles.measureTitle}>{title}</h3>\n      <p className={styles.measureDescription}>{description}</p>\n      <div className={styles.measureDetails}>\n        <div>\n          <div className={styles.measureDetail}>\n            {I18n('applies_for')} {area}\n          </div>\n          <div className={styles.measureDetail}>\n            {validFrom && (\n              <Time datetime={validFrom} prefix={`${I18n('from')} `} />\n            )}\n            {validTo && <Time datetime={validTo} prefix={`${I18n('to')} `} />}\n          </div>\n        </div>\n        <Link to={link} label={I18n('more')}>\n          <Button\n            text={I18n('more')}\n            variant=\"outline-yellow\"\n            className={styles.measureButton}\n          />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Measure;\n","import useMobile from '@/hooks/useMobile';\nimport { IMeasure } from 'graphql-types';\nimport React from 'react';\nimport Measure from './measure';\n\ninterface Props {\n  measures: IMeasure[];\n  descriptions?: string[];\n}\n\nconst MeasureList: React.FC<Props> = ({ measures, descriptions }) => {\n  const isMobile = useMobile();\n\n  const maxItems = isMobile ? 3 : 6;\n\n  return (\n    <>\n      {measures\n        .slice(0, maxItems)\n        .map(({ id, title, path, valid_from, valid_to, relationships }, i) => (\n          <Measure\n            key={id}\n            title={title}\n            description={descriptions[i] ?? ''}\n            validFrom={valid_from}\n            validTo={valid_to}\n            link={path.alias}\n            area={relationships.region.map((item) => item.name).join(', ')}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default MeasureList;\n","import React from 'react';\nimport Link from '@/components/link';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport styles from './situation.module.scss';\nimport { IArea } from 'graphql-types';\nimport ContentIcon from '@/components/content-icon/content-icon';\n\ninterface Props {\n  situation: IArea;\n}\n\nconst Situation: React.FC<Props> = ({ situation }) => {\n  const { name, path } = situation;\n  const iconCode = situation?.relationships?.field_ref_icon?.code;\n\n  return (\n    <Link to={path.alias} className={styles.situation}>\n      <span className={styles.situationTitle}>\n        <ContentIcon className={styles.situationTitleIcon} code={iconCode} />\n        {name}\n      </span>\n      <KeyboardArrowRight style={{ fontSize: 16 }} className=\"color-yellow\" />\n    </Link>\n  );\n};\n\nexport default Situation;\n","import React from 'react';\nimport Situation from '@/components/situations-box/situation';\nimport styles from './situations-box.module.scss';\nimport { ISituation } from 'graphql-types';\n\ninterface IProps {\n  situations: ISituation[];\n}\n\nconst SituationsBox: React.FC<IProps> = ({ situations }) => {\n  return (\n    <div className={styles.situations}>\n      {situations.map((situation) => (\n        <Situation situation={situation} key={`situation-${situation.id}`} />\n      ))}\n    </div>\n  );\n};\n\nexport default SituationsBox;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Button from '../button';\nimport Col from '../col';\nimport ContentIcon from '../content-icon';\nimport classes from './guide-item.module.scss';\n\nimport Time from '@/components/time';\nimport I18n from '@/components/i18n';\n\ninterface IProps {\n  title: string;\n  description?: string;\n  buttonUrl: string;\n  variant?: 'white' | 'blue';\n  buttonText: string;\n  iconCode?: string;\n  area?: string;\n  validFrom?: string;\n  validTo?: string;\n}\n\nconst GuideItem: React.FC<IProps> = ({\n  title,\n  buttonUrl,\n  buttonText,\n  iconCode,\n  variant,\n  description,\n  area,\n  validTo,\n  validFrom,\n}) => {\n  return (\n    <>\n      <Col col={12} colSm={6} colLg={4} className=\"box\">\n        <div className=\"box__inner\">\n          <div style={{ height: '74px' }} className=\"d-flex flex-row\">\n            {iconCode && (\n              <ContentIcon\n                code={iconCode}\n                className={classNames(classes.guideItemIcon, {\n                  [classes.guideItemIconBlue]: variant === 'white',\n                })}\n              />\n            )}\n            <h3\n              className={classNames(classes.guideItemTitle, {\n                [classes.guideItemTitleBlue]: variant === 'white',\n              })}\n            >\n              {title}\n            </h3>\n          </div>\n          {(area || validFrom || validTo) && (\n            <div\n              className={classNames(\n                'd-flex',\n                'flex-row',\n                'flex-wrap',\n                'justify-content-between',\n                classes.guideItemSubTitle,\n                { [classes.guideItemSubTitleBlue]: variant === 'white' },\n              )}\n            >\n              {/**\n               * There must be a better way of handling which date to show\n               * It will not layout correctly if showing both\n               * Maybe show start date before it actually starts\n               * and show end date during the mesurement?\n               */}\n              <p>{area}</p>\n              <p>\n                {validFrom && (\n                  <Time datetime={validFrom} prefix={`${I18n('from')} `} />\n                )}\n                {validTo && (\n                  <Time datetime={validTo} prefix={`${I18n('to')} `} />\n                )}\n              </p>\n            </div>\n          )}\n          {description && (\n            <p\n              className={classNames(classes.guideItemDescriptionText, {\n                [classes.guideItemDescriptionTextBlue]: variant === 'white',\n              })}\n              style={{ height: '40px' }}\n            >\n              {description}\n            </p>\n          )}\n          <Button\n            variant=\"outline-yellow\"\n            text={buttonText}\n            href={buttonUrl}\n            linkTitle={title}\n            className={classNames(classes.guideItemBtn, {\n              [classes.guideItemBtnBlue]: variant === 'white',\n            })}\n          />\n        </div>\n      </Col>\n    </>\n  );\n};\n\nexport default GuideItem;\n","import useMobile from '@/hooks/useMobile';\nimport classNames from 'classnames';\nimport { IArea, IMeasure } from 'graphql-types';\nimport React from 'react';\nimport Button from '../button';\nimport Col from '../col';\nimport ContentBox from '../content-box';\nimport I18n from '../i18n';\nimport MeasureList from '../measure-list';\nimport Row from '../row';\nimport SituationsBox from '../situations-box';\nimport GuideItem from './guide-item';\nimport classes from './guide.module.scss';\n\ninterface IProps {\n  items: IArea[] | IMeasure[];\n  title: string;\n  buttonHref: string;\n  buttonText: string;\n  description?: string;\n  variant?: 'white' | 'blue';\n  itemDescriptions?: string[];\n}\n\nconst Guide: React.FC<IProps> = ({\n  items,\n  title,\n  buttonText,\n  description,\n  buttonHref = '',\n  variant = 'blue',\n  itemDescriptions,\n}) => {\n  const isMobile = useMobile();\n\n  const isSituationBox = isSituation(items[0]);\n\n  title = title.replace('<p>', '').replace('</p>', '');\n\n  if (!isMobile) {\n    return (\n      <div>\n        {isSituationBox}\n        <div\n          className={classNames(\n            'guide',\n            'guide--visible',\n            'mt-0',\n            'mb-2',\n            { [classes.guideWhite]: variant === 'white' },\n            classes.guide,\n          )}\n        >\n          <div className=\"guide__inner\">\n            <Row>\n              <Col col={12} colLg={3}>\n                <div>\n                  <h2\n                    className={classNames('guide__title', classes.guideTitle, {\n                      [classes.guideTitleBlue]: variant === 'white',\n                    })}\n                    dangerouslySetInnerHTML={{ __html: title }}\n                  />\n                </div>\n                <div>\n                  <p\n                    className={classNames(classes.guideDescriptionText, {\n                      [classes.guideDescriptionTextBlue]: variant === 'white',\n                    })}\n                  >\n                    {description}\n                  </p>\n                </div>\n              </Col>\n              <Col col={12} colLg={9}>\n                <Row className=\"boxes boxes--light boxes--eq\">\n                  {/* If is situation */}\n                  {isSituationBox &&\n                    (items as IArea[]).map((x, i) => {\n                      return (\n                        <GuideItem\n                          key={x.id}\n                          title={x.name}\n                          buttonUrl={x.path.alias}\n                          buttonText={I18n('more')}\n                          description={itemDescriptions[i] ?? ''}\n                          variant={variant}\n                          iconCode={x.relationships?.field_ref_icon?.code}\n                        />\n                      );\n                    })}\n                  {/* If is measure */}\n                  {!isSituationBox &&\n                    (items as IMeasure[]).map((x, i) => {\n                      return (\n                        <GuideItem\n                          key={x.id}\n                          title={x.title}\n                          buttonUrl={x.path.alias}\n                          variant={variant}\n                          buttonText={I18n('more')}\n                          description={itemDescriptions[i] ?? ''}\n                          area={x.relationships?.region\n                            ?.map((item) => item.name)\n                            .join(', ')}\n                          validFrom={x.valid_from}\n                          validTo={x.valid_to}\n                        />\n                      );\n                    })}\n                </Row>\n              </Col>\n            </Row>\n            <Row>\n              <Col col={12} colLg={3}>\n                <div className=\"guide__more\">\n                  <Button\n                    href={buttonHref}\n                    className={classNames(\n                      'btn--color-white',\n                      classes.guideBtn,\n                      {\n                        [classes.guideBtnBlue]: variant === 'white',\n                      },\n                    )}\n                    text={buttonText}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ContentBox\n      title={title}\n      boldedTitleCount={2}\n      buttonText={buttonText}\n      buttonHref={buttonHref}\n      variant={variant}\n    >\n      {isSituationBox ? (\n        <SituationsBox situations={items} />\n      ) : (\n        <MeasureList measures={items} descriptions={itemDescriptions} />\n      )}\n    </ContentBox>\n  );\n};\n\nconst isSituation = (x: any): x is IArea => {\n  return (x as IArea)?.name !== undefined;\n};\n\nexport default Guide;\n","import classNames from 'classnames';\nimport React from 'react';\n\ninterface IProps {\n  icon:\n    | 'person'\n    | 'search'\n    | 'dots-three-vertical'\n    | 'pvs-logo'\n    | 'pvs-logo-text'\n    | 'accordion-arrow-down'\n    | 'accordion-arrow-up'\n    | 'accordion-arrow-left'\n    | 'accordion-arrow-right'\n    | 'arrow-list-down'\n    | 'arrow-list-up'\n    | 'arrow-list-left'\n    | 'arrow-list-right'\n    | 'arrow-down'\n    | 'arrow-up'\n    | 'arrow-left'\n    | 'arrow-right'\n    | 'check'\n    | 'external-link'\n    | 'rss'\n    | 'data-box'\n    | 'pin'\n    | 'calendar'\n    | 'plus'\n    | 'thin-plus'\n    | 'alert'\n    | 'mail'\n    | 'close'\n    | 'circle-plus'\n    | 'circle-minus'\n    | 'time'\n    | 'star'\n    | 'attachment'\n    | 'message'\n    | 'notification'\n    | 'settings'\n    | 'exit'\n    | 'squares-grid';\n  size?: 10 | 16 | 20 | 24 | 32;\n  tooltip?: string;\n  className?: string;\n}\n\nconst GovIcon: React.FC<IProps> = ({ icon, size, tooltip = '', className }) => {\n  return (\n    <span\n      title={tooltip}\n      className={classNames(`pvs-theme-icon-${icon}`, className)}\n      style={{ fontSize: size }}\n    />\n  );\n};\n\nexport default GovIcon;\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport I18n from '@/components/i18n';\n\nimport Button from '../button';\nimport GovIcon from '../gov-icon';\n\nimport classes from './search-box.module.scss';\n\ninterface IProps {\n  placeholder?: string;\n  onSearch?: (term: string) => void;\n}\n\nconst SearchBox: React.FC<IProps> = ({\n  placeholder = I18n('search_placeholder'),\n  onSearch,\n}) => {\n  const [search, setSearch] = useState('');\n\n  const handleSearch = () => {\n    if (search.length < 1) {\n      return;\n    }\n\n    if (onSearch) {\n      onSearch(search);\n    }\n    console.log('Search:', search);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div className=\"search\">\n      <div\n        className={classnames(\n          classes.searchBox,\n          'search__input-holder search--with-icon',\n        )}\n      >\n        <input\n          type=\"text\"\n          className={classnames(\n            classes.searchBoxInput,\n            'form-control search__input',\n          )}\n          placeholder={placeholder}\n          onChange={(event) => setSearch(event.currentTarget.value)}\n          value={search}\n          onKeyDown={handleKeyDown}\n        />\n        <Button\n          icon={<GovIcon icon=\"search\" className=\"search__button--icon\" />}\n          onClick={handleSearch}\n          variant=\"yellow\"\n          className=\"search__button color-white\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import useMobile from '@/hooks/useMobile';\nimport classNames from 'classnames';\nimport React from 'react';\nimport Col from '../col';\nimport SearchBox from '../search-box';\nimport classes from './desktop-top-content.module.scss';\n\ninterface IProps {\n  title: string;\n  subtitle?: string;\n  searchQuery?: string;\n  showSearch?: boolean;\n}\n\nconst DesktopTopContent: React.FC<IProps> = ({\n  title,\n  subtitle,\n  showSearch = true,\n}) => {\n  const isMobile = useMobile();\n\n  if (isMobile) {\n    return null;\n  }\n\n  return (\n    <>\n      <div\n        className={classNames(\n          'd-flex',\n          'flex-column',\n          'justify-content-center',\n          'align-items-center',\n        )}\n        style={{ height: 250 }}\n      >\n        {title && <h2 className={classes.title}>{title}</h2>}\n        {showSearch && (\n          <Col col={10} colMd={8} colLg={4} colXl={3}>\n            <SearchBox />\n          </Col>\n        )}\n        {subtitle && <p className={classes.subtitle}>{subtitle}</p>}\n      </div>\n    </>\n  );\n};\n\nexport default DesktopTopContent;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Container from '@/components/container';\nimport I18n from '@/components/i18n';\nimport { IQuery } from 'graphql-types';\nimport Layout from '@/layouts/default-layout';\nimport { Guide } from '@/components/guide';\nimport DesktopTopContent from '@/components/desktop-top-content';\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport { Helmet } from 'react-helmet';\n\ninterface IProps {\n  data: IQuery;\n}\n\nconst Home: React.FC<IProps> = ({ data }) => {\n  const { homepage } = data;\n  const {\n    situation_label,\n    situation_text,\n    langcode,\n    measure_description,\n    situation_description,\n    meta_description,\n    situation_link,\n    measure_label,\n    measure_link,\n    measure_text,\n    relationships,\n  } = homepage;\n  const { measure_items, situation_items } = relationships;\n\n  // todo add meta description\n  return (\n    <Layout>\n      <Seo\n        title={I18n('homepage_meta_title')}\n        description={meta_description ?? 'CovidPortal'}\n        pagePath=\"/\"\n        htmlLanguage={langcode}\n        schema={`{\n          \"@type\": \"WebSite\",\n          \"@id\": \"https://covid.gov.cz/#website\",\n          \"url\": \"https://covid.gov.cz\",\n          \"name\": \"Covid Portál\",\n          \"publisher\": {\n            \"@id\": \"https://gov.cz\"\n          }\n        }`}\n      />\n      <Helmet title={I18n('homepage_meta_title')} />\n      <DesktopTopContent title={I18n('header_headline')} showSearch={false} />\n      <Container className=\"pt-2\">\n        {situation_items?.length ? (\n          <Guide\n            items={situation_items}\n            title={situation_label.processed}\n            description={situation_text}\n            buttonHref={I18n('slug_situations')}\n            buttonText={situation_link?.title}\n            variant=\"blue\"\n            itemDescriptions={situation_description}\n          />\n        ) : (\n          ''\n        )}\n\n        {measure_items?.length ? (\n          <Guide\n            items={measure_items}\n            title={measure_label.processed}\n            description={measure_text}\n            buttonHref={I18n('slug_measures')}\n            buttonText={measure_link?.title}\n            variant=\"white\"\n            itemDescriptions={measure_description}\n          />\n        ) : (\n          ''\n        )}\n      </Container>\n    </Layout>\n  );\n};\nexport default Home;\n\n// fix: pls fix query\nexport const query = graphql`\n  query IndexQuery($langCode: String!) {\n    homepage(langcode: { eq: $langCode }) {\n      langcode\n      measure_description\n      situation_description\n      meta_description\n      measure_link {\n        uri\n        title\n      }\n      moderation_state\n      measure_label {\n        processed\n      }\n      measure_text\n      situation_label {\n        processed\n      }\n      situation_link {\n        uri\n        title\n      }\n      situation_text\n      relationships {\n        measure_items {\n          id\n          title\n          norm\n          valid_from\n          valid_to\n          path {\n            alias\n          }\n          relationships {\n            region {\n              name\n            }\n          }\n        }\n        situation_items {\n          id\n          name\n          path {\n            alias\n          }\n          relationships {\n            field_ref_icon {\n              code\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"guide\":\"guide-module--guide--Y56gK\",\"guide--white\":\"guide-module--guide--white--1V86G\",\"guideWhite\":\"guide-module--guide--white--1V86G\",\"guide-title\":\"guide-module--guide-title--3jpvv\",\"guideTitle\":\"guide-module--guide-title--3jpvv\",\"guide-title--blue\":\"guide-module--guide-title--blue--1sGBi\",\"guideTitleBlue\":\"guide-module--guide-title--blue--1sGBi\",\"guide-description-text\":\"guide-module--guide-description-text--2EYUo\",\"guideDescriptionText\":\"guide-module--guide-description-text--2EYUo\",\"guide-description-text--blue\":\"guide-module--guide-description-text--blue--3cTiV\",\"guideDescriptionTextBlue\":\"guide-module--guide-description-text--blue--3cTiV\",\"guide-btn\":\"guide-module--guide-btn--hutsJ\",\"guideBtn\":\"guide-module--guide-btn--hutsJ\",\"guide-btn--blue\":\"guide-module--guide-btn--blue--3IIZn\",\"guideBtnBlue\":\"guide-module--guide-btn--blue--3IIZn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"situation\":\"situation-module--situation--2ele-\",\"situationTitle\":\"situation-module--situationTitle--sXYSX\",\"situationTitleIcon\":\"situation-module--situationTitleIcon--1hzX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"guide-item-title\":\"guide-item-module--guide-item-title--18RmY\",\"guideItemTitle\":\"guide-item-module--guide-item-title--18RmY\",\"guide-item-title--blue\":\"guide-item-module--guide-item-title--blue--1bCig\",\"guideItemTitleBlue\":\"guide-item-module--guide-item-title--blue--1bCig\",\"guide-item-icon\":\"guide-item-module--guide-item-icon--3JFui\",\"guideItemIcon\":\"guide-item-module--guide-item-icon--3JFui\",\"guide-item-icon--blue\":\"guide-item-module--guide-item-icon--blue--DbqnR\",\"guideItemIconBlue\":\"guide-item-module--guide-item-icon--blue--DbqnR\",\"guide-item-btn\":\"guide-item-module--guide-item-btn--3geDl\",\"guideItemBtn\":\"guide-item-module--guide-item-btn--3geDl\",\"guide-item-btn--blue\":\"guide-item-module--guide-item-btn--blue--2acse\",\"guideItemBtnBlue\":\"guide-item-module--guide-item-btn--blue--2acse\",\"guide-item-sub-title\":\"guide-item-module--guide-item-sub-title--3lds0\",\"guideItemSubTitle\":\"guide-item-module--guide-item-sub-title--3lds0\",\"guide-item-sub-title--blue\":\"guide-item-module--guide-item-sub-title--blue--4elks\",\"guideItemSubTitleBlue\":\"guide-item-module--guide-item-sub-title--blue--4elks\",\"guide-item-description-text\":\"guide-item-module--guide-item-description-text--1LZoE\",\"guideItemDescriptionText\":\"guide-item-module--guide-item-description-text--1LZoE\",\"guide-item-description-text--blue\":\"guide-item-module--guide-item-description-text--blue--1GaGg\",\"guideItemDescriptionTextBlue\":\"guide-item-module--guide-item-description-text--blue--1GaGg\"};","import React, { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface IProps {\n  className?: string;\n  code?: string;\n}\n\nconst DEFAULT_CODE = 'folder';\n\nexport const ContentIcon: FC<IProps> = ({ className, code }) => {\n  const iconClassName = classNames(className, 'material-icons');\n  return <i className={iconClassName}>{code || DEFAULT_CODE}</i>;\n};\n\nexport default ContentIcon;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentBoxTitle\":\"content-box-module--contentBoxTitle--3E5Vo\",\"contentBoxDescription\":\"content-box-module--contentBoxDescription--O2FI4\",\"contentBox\":\"content-box-module--contentBox--3WK0J\",\"contentBoxNoPadding\":\"content-box-module--contentBoxNoPadding--2vKlZ\",\"contentBox--white\":\"content-box-module--contentBox--white--2fBcG\",\"contentBoxWhite\":\"content-box-module--contentBox--white--2fBcG\",\"contentBox--blue\":\"content-box-module--contentBox--blue--243gT\",\"contentBoxBlue\":\"content-box-module--contentBox--blue--243gT\",\"content-box-btn\":\"content-box-module--content-box-btn--281FR\",\"contentBoxBtn\":\"content-box-module--content-box-btn--281FR\",\"content-box-btn--blue\":\"content-box-module--content-box-btn--blue--22dPm\",\"contentBoxBtnBlue\":\"content-box-module--content-box-btn--blue--22dPm\"};","import React from 'react';\nimport classNames from 'classnames';\nimport Button, { ButtonVariant } from '@/components/button';\nimport Col from '@/components/col';\n\nimport styles from './content-box.module.scss';\n\ninterface Props {\n  title?: string;\n  description?: string;\n  boldedTitleCount?: number;\n  buttonVariant?: ButtonVariant;\n  buttonText?: string;\n  buttonHref?: string;\n  variant?: 'white' | 'blue';\n  noPadding?: boolean;\n}\n\nconst ContentBox: React.FC<Props> = ({\n  children,\n  title,\n  description,\n  buttonVariant,\n  buttonText,\n  buttonHref,\n  variant = '',\n  noPadding,\n}) => {\n  return (\n    // contentBox--white\n    // contentBox--blue\n    <div\n      className={classNames(\n        styles.contentBox,\n        styles[`contentBox--${variant}`],\n        noPadding && styles.contentBoxNoPadding,\n        'row',\n      )}\n    >\n      <Col col={12}>\n        {title && (\n          <h2\n            className={styles.contentBoxTitle}\n            dangerouslySetInnerHTML={{\n              __html: title,\n            }}\n          />\n        )}\n        {description && (\n          <p className={styles.contentBoxDescription}>{description}</p>\n        )}\n        {children}\n        {buttonText && (\n          <Button\n            href={buttonHref}\n            variant={buttonVariant}\n            text={buttonText}\n            className={classNames(styles.contentBoxBtn, {\n              [styles.contentBoxBtnBlue]: variant === 'white',\n            })}\n          />\n        )}\n      </Col>\n    </div>\n  );\n};\n\nexport default ContentBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"situations\":\"situations-box-module--situations--11Ejb\"};","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './variants.module.scss';\n\nimport Link from '@/components/link';\n\nconst getClass = (variant: ButtonVariant, additionalClass?: string): string => {\n  return classNames(\n    { btn: variant !== 'small-black' },\n    { 'btn-primary': variant === 'contained' },\n    { 'btn-outline-primary': variant === 'outline' },\n    { 'btn-outline-dark': variant === 'outline-black' },\n    { 'btn-outline-yellow': variant === 'outline-yellow' },\n    { 'btn-yellow': variant === 'yellow' },\n    { 'text-black': variant === 'outline-black' },\n    { 'btn-secondary': variant === 'secondary' },\n    { [styles.btnSmallBlack]: variant === 'small-black' },\n    { [additionalClass]: additionalClass },\n  );\n};\n\nexport type ButtonVariant =\n  | 'contained'\n  | 'outline'\n  | 'yellow'\n  | 'secondary'\n  | 'outline-black'\n  | 'outline-yellow'\n  | 'small-black';\n\ninterface IProps {\n  text?: string;\n  variant?: ButtonVariant;\n  className?: string;\n  onClick?: () => void;\n  href?: string;\n  disabled?: boolean;\n  icon?: React.ReactNode;\n  linkTitle?: string;\n}\n\nconst Button: React.FC<IProps> = ({\n  variant,\n  onClick,\n  text,\n  href = '',\n  className,\n  disabled = false,\n  icon,\n  linkTitle = '',\n}) => {\n  if (href !== '' && !disabled) {\n    return (\n      <Link to={href} label={linkTitle} dataTestId=\"button-link\">\n        <button\n          type=\"button\"\n          className={getClass(variant, className)}\n          onClick={onClick || null}\n          disabled={disabled}\n        >\n          {text}\n          {icon}\n        </button>\n      </Link>\n    );\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={getClass(variant, className)}\n      onClick={onClick || null}\n      disabled={disabled}\n    >\n      {text}\n      {icon}\n    </button>\n  );\n};\n\nexport default Button;\n"],"sourceRoot":""}
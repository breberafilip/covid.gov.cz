{"version":3,"sources":["webpack:///./src/components/category-item-list/category-item-list.module.scss","webpack:///./src/components/measure-detail/measure-detail.tsx","webpack:///./src/templates/measures/page.tsx","webpack:///./src/components/time/time.tsx","webpack:///./src/components/subtitle/subtitle.module.scss","webpack:///./src/layouts/desktop-left-menu-layout.tsx","webpack:///./src/components/topic-detail/topic-detail.module.scss","webpack:///./src/components/headline/headline.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/layouts/desktop-left-menu-layout.module.scss","webpack:///./src/components/category-item/category-item.tsx","webpack:///./node_modules/@material-ui/icons/esm/KeyboardArrowLeft.js","webpack:///./src/components/category-item-list/category-item-list.tsx","webpack:///./src/components/category-item-list/measure-area-list.tsx","webpack:///./src/components/category-item-list/situation-area-list.tsx","webpack:///./src/components/subtitle/subtitle.tsx","webpack:///./src/components/topic-detail/topic-detail.tsx","webpack:///./node_modules/@material-ui/icons/esm/Room.js","webpack:///./node_modules/@material-ui/icons/esm/Event.js","webpack:///./src/components/marker/marker.tsx","webpack:///./src/components/breadcrumb/breadcrumb.module.scss","webpack:///./src/components/category-item/category-item.module.scss"],"names":["module","exports","measure","t","useTranslation","hasSourceLink","Boolean","hasRegion","hasTimeConstraint","title","subtitle","processedContent","processed","className","regions","region","displayTime","validFrom","validTo","valid_to","to","uri","query","data","pageContext","relatedMeasures","id","name","path","isActive","slug","description","pagePath","htmlLanguage","langcode","datePublished","dateModified","langCode","isBlogPost","breadcrumbItems","url","alias","items","variant","menu","linkBack","titleIconCode","code","hideMenuOnMobile","datetime","prefix","suffix","dateConfig","year","month","day","hour","minute","timeZone","dateTime","Date","toLocaleString","children","classNames","styles","main","iconCode","getBreadcrumbClasses","classes","getItemClasses","index","aria-label","key","item","isNavItem","categoryItemTitle","chevron","style","fontSize","createSvgIcon","createElement","d","currentLanguage","useCurrentLanguage","collator","Intl","a","b","styledTitle","i","acc","wrapper","header","icon","dangerouslySetInnerHTML","__html","location","useLocation","listItems","relationships","pathname","topicDetail","Marker","RegionsMarker","TimeMarker"],"mappings":"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","file":"component---src-templates-measures-page-tsx-bc8f5e655bdc34d9e737.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"category-item-list-module--wrapper--2l6te\",\"header\":\"category-item-list-module--header--32CZs\",\"icon\":\"category-item-list-module--icon--3Y5rx\",\"chevron\":\"category-item-list-module--chevron--cmaV2\",\"linkBack\":\"category-item-list-module--linkBack--K051_\"};","import React from 'react';\n\nimport Link from '@/components/link';\n\nimport { IMeasureDetailFragment } from '@graphql-types';\nimport { graphql } from 'gatsby';\nimport TopicDetail from '../topic-detail';\nimport { RegionsMarker, TimeMarker } from '../marker';\nimport { useTranslation } from '../i18n';\n\ninterface IProps {\n  measure: IMeasureDetailFragment;\n}\n\nconst MeasureDetail: React.FC<IProps> = ({ measure }) => {\n  const { t } = useTranslation();\n  const hasSourceLink = Boolean(measure.source);\n  const hasRegion = Boolean(measure.relationships.region.length);\n  const hasTimeConstraint = Boolean(measure.valid_from || measure.valid_to);\n  return (\n    <TopicDetail\n      title={measure.title}\n      subtitle={measure.norm}\n      processedContent={measure?.content?.processed}\n    >\n      {(hasRegion || hasTimeConstraint) && (\n        <div className=\"mt-2\">\n          <h3 className=\"mb-1 color-blue-dark\">{t('location_validity')}</h3>\n          {hasRegion && (\n            <RegionsMarker regions={measure.relationships.region} />\n          )}\n          {hasTimeConstraint && (\n            <TimeMarker\n              displayTime\n              validFrom={measure.valid_from}\n              validTo={measure.valid_to}\n            />\n          )}\n        </div>\n      )}\n      {hasSourceLink && (\n        <div className=\"mt-2\">\n          <hr />\n          <h3 className=\"mb-1 color-blue-dark\">{t('related')}</h3>\n          <div>\n            <Link className=\"color-blue mb-1\" to={measure.source.uri}>\n              {measure.source.title}\n            </Link>\n          </div>\n        </div>\n      )}\n    </TopicDetail>\n  );\n};\n\nexport const query = graphql`\n  fragment MeasureDetail on measure {\n    title\n    norm\n    content: description {\n      processed\n    }\n    source {\n      uri\n      title\n    }\n    relationships {\n      region {\n        name\n      }\n      situation_type: measure_type {\n        name\n        path {\n          alias\n        }\n      }\n      related_situations: situation {\n        title\n      }\n    }\n    path {\n      alias\n    }\n    changed\n    valid_from\n    valid_to\n  }\n`;\n\nexport default MeasureDetail;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { IMeasurePageQuery, ISitePageContext } from 'graphql-types';\nimport { SchemaComp } from '@/components/schema/schema';\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport Layout from '@/layouts/default-layout';\nimport MeasureDetail from '@/components/measure-detail';\nimport DesktopLeftMenuLayout from '@/layouts/desktop-left-menu-layout';\nimport CategoryItemList from '@/components/category-item-list';\nimport Container from '@/components/container';\nimport Breadcrumb from '@/components/breadcrumb';\nimport { useTranslation } from '@/components/i18n';\n\ninterface IProps {\n  data: IMeasurePageQuery;\n  pageContext: ISitePageContext;\n}\n\nconst Page: React.FC<IProps> = ({ data, pageContext }) => {\n  const { t } = useTranslation();\n  const relatedMeasures: React.ComponentProps<\n    typeof CategoryItemList\n  >['items'] = data.measureType.relationships.measure.map((measure) => ({\n    id: measure.id,\n    name: measure.title,\n    path: measure.path.alias,\n    isActive: measure.path.alias === pageContext.slug,\n  }));\n\n  return (\n    <Layout pageContext={pageContext}>\n      <Seo\n        title={data.measure.title}\n        description={\n          data.measure.meta_description || t('current_measures_overview_meta')\n        }\n        pagePath={data.measure.path.alias}\n        htmlLanguage={data.measure.langcode}\n      />\n      <SchemaComp\n        datePublished={\n          data.measure.valid_from\n            ? data.measure.valid_from\n            : data.measure.created\n        }\n        dateModified={data.measure.changed}\n        title={data.measure.title}\n        langCode={data.measure.langcode}\n        isBlogPost\n        description={data.measure.meta_description}\n        breadcrumbItems={[\n          { title: t('home'), url: '/' },\n          {\n            title: t('current_measures'),\n            url: t(`slug_measures`),\n          },\n          {\n            title: data.measure.relationships?.situation_type?.name,\n            url: data.measure.relationships?.situation_type?.path?.alias,\n          },\n          data.measure.title,\n        ]}\n      />\n      <Container>\n        <div className=\"pt-1\">\n          <Breadcrumb\n            items={[\n              { title: t('home'), url: '/' },\n              {\n                title: t('current_measures'),\n                url: t(`slug_measures`),\n              },\n              {\n                title: data.measure.relationships?.measure_type?.name,\n                url: data.measure.relationships?.measure_type?.path?.alias,\n              },\n              data.measure.title,\n            ]}\n            variant=\"inverse\"\n          />\n        </div>\n        <DesktopLeftMenuLayout\n          menu={\n            <CategoryItemList\n              items={relatedMeasures}\n              linkBack={{\n                slug: pageContext.listSlug,\n                title: t('current_measures'),\n              }}\n              title={data.measureType.name}\n              titleIconCode={data.measureType?.relationships?.icon?.code}\n            />\n          }\n          hideMenuOnMobile\n        >\n          <MeasureDetail measure={data.measure} />\n        </DesktopLeftMenuLayout>\n      </Container>\n    </Layout>\n  );\n};\nexport default Page;\n\nexport const query = graphql`\n  query MeasurePage($slug: String!, $listSlug: String!, $langCode: String!) {\n    measure(path: { alias: { eq: $slug }, langcode: { eq: $langCode } }) {\n      title\n      meta_description\n      content: description {\n        processed\n      }\n      path {\n        alias\n      }\n      langcode\n      valid_from\n      created\n      relationships {\n        region {\n          name\n        }\n        measure_type {\n          name\n          path {\n            alias\n          }\n        }\n        related_situations: situation {\n          title\n        }\n      }\n      ...MeasureDetail\n    }\n    measureType(path: { alias: { eq: $listSlug } }) {\n      name\n      path {\n        alias\n      }\n      relationships {\n        icon {\n          code\n        }\n        measure {\n          id\n          title\n          path {\n            alias\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\ninterface Props {\n  datetime: string;\n  displayTime?: boolean;\n  prefix?: string;\n  suffix?: string;\n}\n\nconst Time: React.FC<Props> = ({\n  datetime,\n  displayTime,\n  prefix,\n  suffix = ' ',\n}) => {\n  const dateConfig = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: displayTime ? '2-digit' : undefined,\n    minute: displayTime ? '2-digit' : undefined,\n    timeZone: 'Europe/Prague',\n  };\n  return (\n    <time dateTime={datetime}>\n      {prefix}\n      {new Date(datetime).toLocaleString('cs-CZ', dateConfig)}\n      {suffix}\n    </time>\n  );\n};\n\nexport default Time;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"subtitle-module--subtitle--3-_JB\"};","import React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './desktop-left-menu-layout.module.scss';\n\ninterface IProps {\n  menu: React.ReactNode;\n  hideMenuOnMobile?: boolean;\n}\n\nconst DesktopLeftMenuLayout: React.FC<IProps> = ({\n  menu,\n  children,\n  hideMenuOnMobile,\n}) => {\n  return (\n    <div className={classNames(styles.wrapper, 'mt-3')}>\n      <nav className={classNames({ [styles.hideOnMobile]: hideMenuOnMobile })}>\n        {menu}\n      </nav>\n      <div className={styles.main}>{children}</div>\n    </div>\n  );\n};\n\nexport default DesktopLeftMenuLayout;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topicDetail\":\"topic-detail-module--topicDetail--kRP4b\"};","import classNames from 'classnames';\nimport React from 'react';\nimport ContentIcon from '../content-icon';\n\nimport styles from './headline.module.scss';\n\ninterface IProps {\n  iconCode?: string;\n  className?: string;\n}\n\nconst Headline: React.FC<IProps> = ({ iconCode, className, children }) => {\n  return (\n    <div className={classNames(className, styles.headlineWrapper)}>\n      <h1 className={classNames(styles.headline)}>\n        {iconCode && (\n          <ContentIcon className={styles.headlineIcon} code={iconCode} />\n        )}\n        <span>{children}</span>\n      </h1>\n      <hr />\n    </div>\n  );\n};\n\nexport default Headline;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  title={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headlineWrapper\":\"headline-module--headlineWrapper--1KseK\",\"headline\":\"headline-module--headline--2EZlD\",\"headlineIcon\":\"headline-module--headlineIcon--3wPWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"desktop-left-menu-layout-module--wrapper--2FRhZ\",\"hideOnMobile\":\"desktop-left-menu-layout-module--hideOnMobile--3x5nP\",\"main\":\"desktop-left-menu-layout-module--main--2USeX\"};","import classNames from 'classnames';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport Link from '@/components/link';\nimport ContentIcon from '@/components/content-icon/content-icon';\nimport React, { FC } from 'react';\n\nimport styles from './category-item.module.scss';\n\ntype Props = {\n  id: string;\n  name: string;\n  path: string;\n  iconCode?: string;\n  isActive: boolean;\n};\n\nconst CategoryItem: FC<Props> = ({ name, path, iconCode, isActive }) => {\n  return (\n    <Link\n      to={path}\n      className={classNames(styles.categoryItem, 'py-2', {\n        [styles.isActive]: isActive,\n      })}\n    >\n      {iconCode && (\n        <ContentIcon className={styles.categoryItemIcon} code={iconCode} />\n      )}\n      <span className={styles.categoryItemTitle}>{name}</span>\n      <div className={styles.chevron}>\n        <KeyboardArrowRight style={{ fontSize: 18 }} className=\"color-yellow\" />\n      </div>\n    </Link>\n  );\n};\n\nexport default CategoryItem;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');","import React, { FC } from 'react';\nimport styles from './category-item-list.module.scss';\nimport CategoryItem from '../category-item/category-item';\nimport Link from '@/components/link';\nimport { KeyboardArrowLeft } from '@material-ui/icons';\nimport ContentIcon from '../content-icon';\nimport { useCurrentLanguage, useTranslation } from '../i18n';\n\ntype Props = {\n  title: string;\n  titleIconCode?: string;\n  linkBack?: {\n    title: string;\n    slug: string;\n  };\n  items: React.ComponentProps<typeof CategoryItem>[];\n};\n\nconst makeFirstWordBold = (sentence: string) =>\n  sentence.split(' ').reduce((acc, curr, i) => {\n    if (i === 0) {\n      return (acc += `<strong>${curr}</strong>`);\n    }\n    return (acc += ' ' + curr);\n  }, '');\n\nconst CategoryItemList: FC<Props> = ({\n  items,\n  title,\n  titleIconCode,\n  linkBack,\n}) => {\n  const currentLanguage = useCurrentLanguage();\n  const { t } = useTranslation();\n  const collator = new Intl.Collator([currentLanguage]);\n  items.sort((a, b) => collator.compare(a.name, b.name));\n\n  const styledTitle = makeFirstWordBold(title);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.header}>\n        <h2>\n          {titleIconCode && (\n            <ContentIcon code={titleIconCode} className={styles.icon} />\n          )}\n          <span dangerouslySetInnerHTML={{ __html: styledTitle }} />\n        </h2>\n        {linkBack ? (\n          <Link className={styles.linkBack} to={linkBack.slug}>\n            <KeyboardArrowLeft\n              style={{ fontSize: 18 }}\n              className={styles.chevron}\n            />{' '}\n            <span>\n              {t('back_to')}&nbsp;{linkBack.title}\n            </span>\n          </Link>\n        ) : (\n          <hr />\n        )}\n      </div>\n      {items.map((item, i) => (\n        <CategoryItem key={`${item.iconCode}${i}`} {...item} />\n      ))}\n    </div>\n  );\n};\n\nexport default CategoryItemList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { useLocation } from '@reach/router';\nimport { IMeasureAreaFragment } from 'graphql-types';\nimport CategoryItemList from './category-item-list';\nimport { useTranslation } from '../i18n';\n\ninterface IProps {\n  data: IMeasureAreaFragment[];\n}\n\nconst MeasureAreaList: React.FC<IProps> = ({ data }) => {\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  const listItems = data\n    .filter(({ relationships }) => relationships.measure !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === location.pathname,\n    }));\n  return <CategoryItemList items={listItems} title={t('current_measures')} />;\n};\n\nexport const query = graphql`\n  fragment MeasureArea on measure_type {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      measure {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default MeasureAreaList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ISituationAreaFragment } from 'graphql-types';\nimport { useLocation } from '@reach/router';\nimport CategoryItemList from './category-item-list';\nimport { useTranslation } from '../i18n';\n\ninterface IProps {\n  data: ISituationAreaFragment[];\n}\n\nconst SituationAreaList: React.FC<IProps> = ({ data }) => {\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  const listItems = data\n    .filter(({ relationships }) => relationships.situation !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === location.pathname,\n    }));\n  return <CategoryItemList items={listItems} title={t('life_situations')} />;\n};\n\nexport const query = graphql`\n  fragment SituationArea on area {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      situation {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default SituationAreaList;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './subtitle.module.scss';\n\nconst Subtitle: React.FC<{ className?: string }> = ({\n  children,\n  className,\n}) => {\n  return <p className={classNames(styles.subtitle, className)}>{children}</p>;\n};\n\nexport default Subtitle;\n","import React from 'react';\n\nimport Headline from '@/components/headline';\nimport Subtitle from '@/components/subtitle';\n\nimport styles from './topic-detail.module.scss';\n\ninterface IProps {\n  title: string;\n  titleIconCode?: string;\n  processedContent: string;\n  subtitle?: string;\n}\n\nconst TopicDetail: React.FC<IProps> = ({\n  title,\n  titleIconCode,\n  processedContent,\n  children,\n  subtitle,\n}) => {\n  return (\n    <div className={styles.topicDetail}>\n      <Headline iconCode={titleIconCode}>{title}</Headline>\n      <article className=\"bg-white rounded p-2 p-md-3 pb-3 mb-1\">\n        {subtitle && <Subtitle>{subtitle}</Subtitle>}\n        <div\n          dangerouslySetInnerHTML={{\n            __html: processedContent,\n          }}\n        />\n        {children}\n      </article>\n    </div>\n  );\n};\n\nexport default TopicDetail;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Room');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"\n}), 'Event');","import React from 'react';\n\nimport { Room, Event } from '@material-ui/icons';\nimport { IRegion } from '@graphql-types';\nimport Time from '../time';\nimport { useTranslation } from '@/components/i18n';\n\ninterface IProps {\n  icon: React.ReactNode;\n}\n\nconst Marker: React.FC<IProps> = ({ icon, children }) => {\n  return (\n    <div className=\"d-flex align-items-center mb-1 color-blue\">\n      {icon}\n      &nbsp;\n      <span className=\"text-uppercase font-weight-medium\">{children}</span>\n    </div>\n  );\n};\n\ninterface IRegionsMarkerProps {\n  regions: Pick<IRegion, 'name'>[];\n}\n\nexport const RegionsMarker: React.FC<IRegionsMarkerProps> = ({ regions }) => (\n  <Marker icon={<Room />}>\n    {regions.map((region) => region.name).join(', ')}\n  </Marker>\n);\n\ninterface ITimeProps {\n  validFrom: string;\n  validTo: string;\n  displayTime: boolean;\n}\n\nexport const TimeMarker: React.FC<ITimeProps> = ({\n  validFrom,\n  validTo,\n  displayTime,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Marker icon={<Event />}>\n      {validFrom && (\n        <Time\n          displayTime={displayTime}\n          datetime={validFrom}\n          prefix={`${t('from')} `}\n        />\n      )}\n      {validTo && (\n        <Time\n          displayTime={displayTime}\n          datetime={validTo}\n          prefix={`${t('to')} `}\n        />\n      )}\n    </Marker>\n  );\n};\n\nexport default Marker;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categoryItem\":\"category-item-module--categoryItem--3V8HX\",\"chevron\":\"category-item-module--chevron--D9HLp\",\"categoryItemIcon\":\"category-item-module--categoryItemIcon--3wAWD\",\"categoryItemTitle\":\"category-item-module--categoryItemTitle--ErF2o\",\"isActive\":\"category-item-module--isActive--3zXaE\"};"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/headline/headline.tsx","webpack:///./src/components/list-card/list-card.tsx","webpack:///./src/templates/situations/list.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/components/breadcrumb/breadcrumb.module.scss"],"names":["children","className","styles","headline","title","description","link","to","text","I18n","variant","query","area","data","pagePath","schema","items","url","id","meta_description","path","key","alias","getBreadcrumbClasses","classNames","classes","getItemClasses","index","aria-label","item","isNavItem","label","module","exports"],"mappings":"8KAQA,EAJ2B,SAAC,GAAiB,IAAfA,EAAe,EAAfA,SAC5B,OAAO,wBAAIC,UAAWC,IAAOC,UAA7B,K,gLCkBF,EAZmC,SAAC,GAAD,IAAGC,EAAH,QAAUC,EAAV,cAAuBC,EAAvB,cACjC,uBAAMC,GAAN,EAAgBN,UAAU,uCACxB,wBAAIA,UAAU,2BADhB,GAEE,yBAAKA,UAAU,kDACb,uBAAGA,UAAU,kBADf,GAEE,6BACE,uBAAQO,KAAMC,YAAd,UAA8BC,QAAQ,gB,wBCsDjCC,GAFb,UArD+B,SAAC,GAAa,QACnCC,EADmC,EAAXC,KAAW,KAE3C,OACE,2BACE,uBACET,MAAOQ,EADT,KAEEP,YAAaI,YAFf,4BAGEK,SAHF,cAIEC,OAAM,6QAUR,2BACE,yBAAKd,UAAU,QACb,uBACEe,MAAO,CACL,CAAEZ,MAAOK,YAAT,QAAuBQ,IAAK,KAC5B,CACEb,MAAOK,YADT,mBAEEQ,IAAKR,YAAK,oBAEZG,EAPJ,MASEF,QAAQ,aAGZ,yBAAKT,UAAU,QACb,2BAAWW,EAff,OAiBE,uCACGA,EADH,sCACG,EADH,8BACG,OACC,YAA2C,IAAxCM,EAAwC,EAAxCA,GAAId,EAAoC,EAApCA,MAAOe,EAA6B,EAA7BA,iBAAkBC,EAAW,EAAXA,KAC9B,OACE,qBACEhB,MADF,EAEEC,YAFF,EAGEgB,IAAG,kBAHL,EAIEf,KAAMc,aAAF,EAAEA,EAAME,eAYvB,e,mJCpDDC,EAAuB,SAACb,GAC5B,OAAOc,IAAW,aAAcC,IAAf,oBAA4C,CAC3D,sBAAmC,YAAZf,KAqC3B,EAjCqC,SAAC,GAAkC,IAAhCM,EAAgC,EAAhCA,MAAgC,IAAzBN,eAAyB,MAAf,SAAe,EAChEgB,EAAiB,SAACC,GAA0B,MAChD,OAAOH,IAAW,mBAAoBC,IAArB,uBACdA,IADc,sBACiBE,IAAUX,SAD3B,EAAjB,KAKF,OACE,yBAAKf,UAAL,cAA6B2B,aAAW,cACtC,wBAAI3B,UAAWsB,EAAqBb,IACjCM,EAAA,KAAU,cACT,OACE,wBACEK,IAAG,mBADL,EAEEpB,UAAWyB,EAAeC,IAxBtB,SAACE,GACjB,gBAAQA,EAAD,MAyBMC,CAAA,GACC,uBACEvB,GAAIsB,EADN,IAEE5B,UAFF,mBAGE8B,MAAOF,EAAKzB,QAGd,0BAAMH,UAAU,oBAZtB,W,uBCnCV+B,EAAOC,QAAU,CAAC,SAAW,qC,qBCA7BD,EAAOC,QAAU,CAAC,oBAAsB,gDAAgD,eAAiB,2CAA2C,qBAAuB","file":"component---src-templates-situations-list-tsx-1f9c982f67ecd774fe0e.js","sourcesContent":["import React from 'react';\n\nimport styles from './headline.module.scss';\n\nconst Headline: React.FC = ({ children }) => {\n  return <h1 className={styles.headline}>{children}</h1>;\n};\n\nexport default Headline;\n","import React from 'react';\nimport Button from '@/components/button';\nimport Link from '@/components/link';\nimport I18n from '@/components/i18n';\n\ninterface IProps {\n  title: string;\n  link: string;\n  description: string;\n}\n\nconst ListCard: React.FC<IProps> = ({ title, description, link }) => (\n  <Link to={link} className=\"card p-2 mb-2  text-decoration-none\">\n    <h2 className=\"font-weight-medium mb-1\">{title}</h2>\n    <div className=\"d-flex justify-content-between align-items-end\">\n      <p className=\"m-0 color-gray\">{description}</p>\n      <div>\n        <Button text={I18n('detail')} variant=\"outline\" />\n      </div>\n    </div>\n  </Link>\n);\n\nexport default ListCard;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { IQuery } from 'graphql-types';\nimport Container from '@/components/container';\n\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport Headline from '@/components/headline';\nimport ListCard from '@/components/list-card';\nimport Layout from '@/layouts/default-layout';\nimport Breadcrumb from '@/components/breadcrumb';\nimport I18n from '@/components/i18n';\n\ninterface IProps {\n  data: IQuery;\n}\n\nconst Home: React.FC<IProps> = ({ data }) => {\n  const { area } = data;\n  return (\n    <Layout>\n      <Seo\n        title={area.name}\n        description={I18n('situations_overview_meta')}\n        pagePath=\"/situations\"\n        schema={`{\n          \"@type\": \"WebSite\",\n          \"@id\": \"https://covid.gov.cz/#situations\",\n          \"url\": \"https://covid.gov.cz/situations\",\n          \"name\": \"Life Situations\",\n          \"publisher\": {\n            \"@id\": \"https://gov.cz\"\n          }\n        }`}\n      />\n      <Container>\n        <div className=\"pt-1\">\n          <Breadcrumb\n            items={[\n              { title: I18n('home'), url: '/' },\n              {\n                title: I18n('life_situations'),\n                url: I18n('slug_situations'),\n              },\n              area.name,\n            ]}\n            variant=\"inverse\"\n          />\n        </div>\n        <div className=\"mt-3\">\n          <Headline>{area.name}</Headline>\n        </div>\n        <div>\n          {area.relationships?.situation?.map(\n            ({ id, title, meta_description, path }) => {\n              return (\n                <ListCard\n                  title={title}\n                  description={meta_description}\n                  key={`area-list-item-${id}`}\n                  link={path?.alias}\n                />\n              );\n            },\n          )}\n        </div>\n      </Container>\n    </Layout>\n  );\n};\nexport default Home;\n\nexport const query = graphql`\n  query($slug: String!) {\n    area(path: { alias: { eq: $slug } }) {\n      name\n      relationships {\n        situation {\n          id\n          title\n          meta_description\n          path {\n            alias\n          }\n        }\n      }\n    }\n  }\n`;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  label={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"headline-module--headline--2EZlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};"],"sourceRoot":""}
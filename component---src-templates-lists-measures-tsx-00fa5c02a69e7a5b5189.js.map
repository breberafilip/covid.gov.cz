{"version":3,"sources":["webpack:///./src/components/category-item/category-item.tsx","webpack:///./src/components/schema/index.tsx","webpack:///./src/components/headline/headline.tsx","webpack:///./src/templates/lists/measures.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./node_modules/@material-ui/icons/esm/KeyboardArrowRight.js","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/components/content-icon/content-icon.tsx","webpack:///./src/components/content-box/content-box.module.scss","webpack:///./src/components/content-box/content-box.tsx","webpack:///./src/components/breadcrumb/breadcrumb.module.scss","webpack:///./src/components/category-item/category-item.module.scss"],"names":["name","path","iconCode","to","className","styles","code","categoryItemTitle","style","fontSize","children","headline","data","pageContext","nodes","collator","Intl","a","b","title","I18n","description","pagePath","htmlLanguage","langCode","isBlogPost","isSpecialList","breadcrumbItems","url","items","variant","noPadding","n","key","query","getBreadcrumbClasses","classNames","classes","getItemClasses","index","aria-label","item","isNavItem","createElement","d","module","exports","iconClassName","buttonVariant","buttonText","buttonHref","col","dangerouslySetInnerHTML","__html","contentBoxDescription","href","text"],"mappings":"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","file":"component---src-templates-lists-measures-tsx-00fa5c02a69e7a5b5189.js","sourcesContent":["import { KeyboardArrowRight } from '@material-ui/icons';\nimport Link from '@/components/link';\nimport ContentIcon from '@/components/content-icon/content-icon';\nimport React, { FC } from 'react';\n\nimport styles from './category-item.module.scss';\n\ntype Props = {\n  name: string;\n  path: string;\n  iconCode: string;\n};\n\nconst CategoryItem: FC<Props> = ({ name, path, iconCode }) => {\n  return (\n    <Link to={path} className={styles.categoryItem + ' py-1'}>\n      <ContentIcon className={styles.categoryItemIcon} code={iconCode} />\n      <span className={styles.categoryItemTitle}>{name}</span>\n      <KeyboardArrowRight style={{ fontSize: 16 }} className=\"color-yellow\" />\n    </Link>\n  );\n};\n\nexport default CategoryItem;\n","export { default } from './schema';\n","import React from 'react';\n\nimport styles from './headline.module.scss';\n\nconst Headline: React.FC = ({ children }) => {\n  return <h1 className={styles.headline}>{children}</h1>;\n};\n\nexport default Headline;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport ContentBox from '@/components/content-box';\nimport Container from '@/components/container';\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport { IMeasureTypeQueryQuery, ISitePageContext } from '@graphql-types';\nimport Breadcrumb from '@/components/breadcrumb';\nimport Headline from '@/components/headline';\nimport CategoryItem from '@/components/category-item';\nimport Layout from '@/layouts/default-layout';\nimport I18n from '@/components/i18n';\nimport SchemaComp from '@/components/schema';\n\ninterface IProps {\n  data: IMeasureTypeQueryQuery;\n  pageContext: ISitePageContext;\n}\n\nconst Measures: React.FC<IProps> = ({ data, pageContext }) => {\n  const {\n    allMeasureType: { nodes },\n  } = data;\n\n  const collator = new Intl.Collator([pageContext.langCode]);\n  nodes.sort((a, b) => collator.compare(a.name, b.name));\n\n  return (\n    <Layout pageContext={pageContext}>\n      <Seo\n        title={I18n('current_measures_overview')}\n        description={I18n('current_measures_overview_meta')}\n        pagePath={I18n('slug_measures')}\n        htmlLanguage={pageContext.langCode}\n      />\n      <SchemaComp\n        langCode={pageContext.langCode}\n        description={I18n('current_measures_overview_meta')}\n        isBlogPost={false}\n        isSpecialList\n        title={I18n('current_measures_overview')}\n        breadcrumbItems={[\n          { title: I18n('home'), url: '/' },\n          { title: I18n('current_measures'), url: I18n('slug_measures') },\n        ]}\n      />\n      <Container className=\"pt-1\">\n        <Breadcrumb\n          items={[\n            { title: I18n('home'), url: '/' },\n            { title: I18n('current_measures'), url: I18n('slug_measures') },\n          ]}\n          variant=\"inverse\"\n        />\n      </Container>\n      <Container className=\"mt-3\">\n        <Headline>{I18n('current_measures_overview')}</Headline>\n      </Container>\n      <Container className=\"mt-3\">\n        <ContentBox noPadding>\n          {nodes.map(\n            (n) =>\n              n.relationships.measure !== null && (\n                <CategoryItem\n                  key={n.id}\n                  name={n.name}\n                  path={n.path.alias}\n                  iconCode={n.relationships.icon?.code}\n                />\n              ),\n          )}\n        </ContentBox>\n      </Container>\n    </Layout>\n  );\n};\nexport default Measures;\n\nexport const query = graphql`\n  query MeasureTypeQuery($langCode: String!) {\n    allMeasureType(\n      filter: { langcode: { eq: $langCode } }\n      sort: { fields: name }\n    ) {\n      nodes {\n        id\n        name\n        path {\n          alias\n        }\n        relationships {\n          icon {\n            code\n          }\n          measure {\n            id\n          }\n        }\n      }\n    }\n    searchingTitle: translation(\n      langcode: { eq: $langCode }\n      source: { eq: \"still_searching_title\" }\n    ) {\n      langcode\n      target\n    }\n    searchingDescription: translation(\n      langcode: { eq: $langCode }\n      source: { eq: \"still_searching_description\" }\n    ) {\n      target\n    }\n    callTitle: translation(\n      langcode: { eq: $langCode }\n      source: { eq: \"call_title\" }\n    ) {\n      target\n    }\n    callDescription: translation(\n      langcode: { eq: $langCode }\n      source: { eq: \"call_description\" }\n    ) {\n      target\n    }\n  }\n`;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  title={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"headline-module--headline--2EZlD\"};","import React, { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface IProps {\n  className?: string;\n  code?: string;\n}\n\nconst DEFAULT_CODE = 'folder';\n\nexport const ContentIcon: FC<IProps> = ({ className, code }) => {\n  const iconClassName = classNames(className, 'material-icons');\n  return <i className={iconClassName}>{code || DEFAULT_CODE}</i>;\n};\n\nexport default ContentIcon;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentBoxTitle\":\"content-box-module--contentBoxTitle--3E5Vo\",\"contentBoxDescription\":\"content-box-module--contentBoxDescription--O2FI4\",\"contentBox\":\"content-box-module--contentBox--3WK0J\",\"contentBoxNoPadding\":\"content-box-module--contentBoxNoPadding--2vKlZ\",\"contentBox--white\":\"content-box-module--contentBox--white--2fBcG\",\"contentBoxWhite\":\"content-box-module--contentBox--white--2fBcG\",\"contentBox--blue\":\"content-box-module--contentBox--blue--243gT\",\"contentBoxBlue\":\"content-box-module--contentBox--blue--243gT\",\"content-box-btn\":\"content-box-module--content-box-btn--281FR\",\"contentBoxBtn\":\"content-box-module--content-box-btn--281FR\",\"content-box-btn--blue\":\"content-box-module--content-box-btn--blue--22dPm\",\"contentBoxBtnBlue\":\"content-box-module--content-box-btn--blue--22dPm\"};","import React from 'react';\nimport classNames from 'classnames';\nimport Button, { ButtonVariant } from '@/components/button';\nimport Col from '@/components/col';\n\nimport styles from './content-box.module.scss';\n\ninterface Props {\n  title?: string;\n  description?: string;\n  boldedTitleCount?: number;\n  buttonVariant?: ButtonVariant;\n  buttonText?: string;\n  buttonHref?: string;\n  variant?: 'white' | 'blue';\n  noPadding?: boolean;\n}\n\nconst ContentBox: React.FC<Props> = ({\n  children,\n  title,\n  description,\n  buttonVariant,\n  buttonText,\n  buttonHref,\n  variant = '',\n  noPadding,\n}) => {\n  return (\n    // contentBox--white\n    // contentBox--blue\n    <div\n      className={classNames(\n        styles.contentBox,\n        styles[`contentBox--${variant}`],\n        noPadding && styles.contentBoxNoPadding,\n        'row',\n      )}\n    >\n      <Col col={12}>\n        {title && (\n          <h2\n            className={styles.contentBoxTitle}\n            dangerouslySetInnerHTML={{\n              __html: title,\n            }}\n          />\n        )}\n        {description && (\n          <p className={styles.contentBoxDescription}>{description}</p>\n        )}\n        {children}\n        {buttonText && (\n          <Button\n            href={buttonHref}\n            variant={buttonVariant}\n            text={buttonText}\n            className={classNames(styles.contentBoxBtn, {\n              [styles.contentBoxBtnBlue]: variant === 'white',\n            })}\n          />\n        )}\n      </Col>\n    </div>\n  );\n};\n\nexport default ContentBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categoryItem\":\"category-item-module--categoryItem--3V8HX\",\"categoryItemIcon\":\"category-item-module--categoryItemIcon--3wAWD\",\"categoryItemTitle\":\"category-item-module--categoryItemTitle--ErF2o\"};"],"sourceRoot":""}
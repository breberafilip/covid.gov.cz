{"version":3,"sources":["webpack:///./src/components/category-item-list/category-item-list.module.scss","webpack:///./src/components/button/variants.module.scss","webpack:///./src/components/time/time.tsx","webpack:///./src/components/subtitle/subtitle.module.scss","webpack:///./src/layouts/desktop-left-menu-layout.tsx","webpack:///./src/components/related-measure/related-measure.module.scss","webpack:///./src/components/topic-detail/topic-detail.module.scss","webpack:///./src/components/headline/headline.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./src/components/link-styled/link-styled.module.scss","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/layouts/desktop-left-menu-layout.module.scss","webpack:///./src/components/category-item/category-item.tsx","webpack:///./node_modules/@material-ui/icons/esm/KeyboardArrowLeft.js","webpack:///./src/components/category-item-list/category-item-list.tsx","webpack:///./src/components/category-item-list/measure-area-list.tsx","webpack:///./src/components/category-item-list/situation-area-list.tsx","webpack:///./src/components/subtitle/subtitle.tsx","webpack:///./src/components/topic-detail/topic-detail.tsx","webpack:///./node_modules/@material-ui/icons/esm/Room.js","webpack:///./node_modules/@material-ui/icons/esm/Event.js","webpack:///./src/components/marker/marker.tsx","webpack:///./src/components/accordion/accordion-section.module.scss","webpack:///./src/components/content-box/content-box.module.scss","webpack:///./src/components/content-box/content-box.tsx","webpack:///./src/components/breadcrumb/breadcrumb.module.scss","webpack:///./src/components/category-item/category-item.module.scss","webpack:///./node_modules/@material-ui/icons/esm/Clear.js","webpack:///./node_modules/@material-ui/icons/esm/Add.js","webpack:///./src/components/accordion/accordion-section.tsx","webpack:///./src/components/accordion/accordion.tsx","webpack:///./src/components/related-measure/related-measure.tsx","webpack:///./src/components/link-styled/linkStyled.tsx","webpack:///./src/components/link-list/link-list.tsx","webpack:///./src/components/situation-detail/situation-detail.tsx","webpack:///./src/templates/situations/page.tsx","webpack:///./src/components/button/button.tsx"],"names":["module","exports","datetime","displayTime","prefix","suffix","dateConfig","year","month","day","hour","minute","timeZone","dateTime","Date","toLocaleString","menu","children","hideMenuOnMobile","className","classNames","styles","main","iconCode","code","getBreadcrumbClasses","variant","classes","items","getItemClasses","index","aria-label","key","item","isNavItem","to","title","name","path","isActive","categoryItemTitle","chevron","style","fontSize","createSvgIcon","createElement","d","titleIconCode","linkBack","lang","gLang","collator","Intl","a","b","styledTitle","i","acc","wrapper","header","icon","dangerouslySetInnerHTML","__html","slug","I18n","data","location","useLocation","listItems","relationships","id","pathname","processedContent","subtitle","topicDetail","Marker","RegionsMarker","regions","region","TimeMarker","validFrom","validTo","description","buttonVariant","buttonText","buttonHref","noPadding","col","contentBoxDescription","href","text","useState","opened","setOpened","toggleSection","useCallback","section","onClick","sectionContent","measure","relatedMeasure","alias","valid_to","linkStyled","linkStyledLink","linkStyledIcon","links","link","situation","relatedSituations","faq","hasFaq","Boolean","hasRelatedLinks","hasRelatedMeasures","hasRelatedSituations","processed","uri","boldedTitleCount","value","query","pageContext","pagePath","htmlLanguage","langCode","datePublished","dateModified","isBlogPost","body","breadcrumbItems","url","props","restCommonProps","composedClassName","btn","getButtonClassName","hasHref","rest","dataTestId","type"],"mappings":"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","file":"component---src-templates-situations-page-tsx-dfdd7f9592ac254162f5.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"category-item-list-module--wrapper--2l6te\",\"header\":\"category-item-list-module--header--32CZs\",\"icon\":\"category-item-list-module--icon--3Y5rx\",\"chevron\":\"category-item-list-module--chevron--cmaV2\",\"linkBack\":\"category-item-list-module--linkBack--K051_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-small-black\":\"variants-module--btn-small-black--398fP\",\"btnSmallBlack\":\"variants-module--btn-small-black--398fP\"};","import React from 'react';\n\ninterface Props {\n  datetime: string;\n  displayTime?: boolean;\n  prefix?: string;\n  suffix?: string;\n}\n\nconst Time: React.FC<Props> = ({\n  datetime,\n  displayTime,\n  prefix,\n  suffix = ' ',\n}) => {\n  const dateConfig = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: displayTime ? '2-digit' : undefined,\n    minute: displayTime ? '2-digit' : undefined,\n    timeZone: 'Europe/Prague',\n  };\n  return (\n    <time dateTime={datetime}>\n      {prefix}\n      {new Date(datetime).toLocaleString('cs-CZ', dateConfig)}\n      {suffix}\n    </time>\n  );\n};\n\nexport default Time;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"subtitle-module--subtitle--3-_JB\"};","import React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './desktop-left-menu-layout.module.scss';\n\ninterface IProps {\n  menu: React.ReactNode;\n  hideMenuOnMobile?: boolean;\n}\n\nconst DesktopLeftMenuLayout: React.FC<IProps> = ({\n  menu,\n  children,\n  hideMenuOnMobile,\n}) => {\n  return (\n    <div className={classNames(styles.wrapper, 'mt-3')}>\n      <nav className={classNames({ [styles.hideOnMobile]: hideMenuOnMobile })}>\n        {menu}\n      </nav>\n      <div className={styles.main}>{children}</div>\n    </div>\n  );\n};\n\nexport default DesktopLeftMenuLayout;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"relatedMeasure\":\"related-measure-module--relatedMeasure--1ipsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topicDetail\":\"topic-detail-module--topicDetail--kRP4b\"};","import classNames from 'classnames';\nimport React from 'react';\nimport ContentIcon from '../content-icon';\n\nimport styles from './headline.module.scss';\n\ninterface IProps {\n  iconCode?: string;\n  className?: string;\n}\n\nconst Headline: React.FC<IProps> = ({ iconCode, className, children }) => {\n  return (\n    <div className={classNames(className, styles.headlineWrapper)}>\n      <h1 className={classNames(styles.headline)}>\n        {iconCode && (\n          <ContentIcon className={styles.headlineIcon} code={iconCode} />\n        )}\n        <span>{children}</span>\n      </h1>\n      <hr />\n    </div>\n  );\n};\n\nexport default Headline;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  title={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkStyled\":\"link-styled-module--linkStyled--_N7FG\",\"linkStyledLink\":\"link-styled-module--linkStyledLink--2U7Xp\",\"linkStyledIcon\":\"link-styled-module--linkStyledIcon--1ApnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headlineWrapper\":\"headline-module--headlineWrapper--1KseK\",\"headline\":\"headline-module--headline--2EZlD\",\"headlineIcon\":\"headline-module--headlineIcon--3wPWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"desktop-left-menu-layout-module--wrapper--2FRhZ\",\"hideOnMobile\":\"desktop-left-menu-layout-module--hideOnMobile--3x5nP\",\"main\":\"desktop-left-menu-layout-module--main--2USeX\"};","import classNames from 'classnames';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport Link from '@/components/link';\nimport ContentIcon from '@/components/content-icon/content-icon';\nimport React, { FC } from 'react';\n\nimport styles from './category-item.module.scss';\n\ntype Props = {\n  id: string;\n  name: string;\n  path: string;\n  iconCode?: string;\n  isActive: boolean;\n};\n\nconst CategoryItem: FC<Props> = ({ name, path, iconCode, isActive }) => {\n  return (\n    <Link\n      to={path}\n      className={classNames(styles.categoryItem, 'py-2', {\n        [styles.isActive]: isActive,\n      })}\n    >\n      {iconCode && (\n        <ContentIcon className={styles.categoryItemIcon} code={iconCode} />\n      )}\n      <span className={styles.categoryItemTitle}>{name}</span>\n      <div className={styles.chevron}>\n        <KeyboardArrowRight style={{ fontSize: 18 }} className=\"color-yellow\" />\n      </div>\n    </Link>\n  );\n};\n\nexport default CategoryItem;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');","import React, { FC } from 'react';\nimport styles from './category-item-list.module.scss';\nimport CategoryItem from '../category-item/category-item';\nimport I18n, { gLang } from '@/components/i18n';\nimport Link from '@/components/link';\nimport { KeyboardArrowLeft } from '@material-ui/icons';\nimport ContentIcon from '../content-icon';\n\ntype Props = {\n  title: string;\n  titleIconCode?: string;\n  linkBack?: {\n    title: string;\n    slug: string;\n  };\n  items: React.ComponentProps<typeof CategoryItem>[];\n};\n\nconst makeFirstWordBold = (sentence: string) =>\n  sentence.split(' ').reduce((acc, curr, i) => {\n    if (i === 0) {\n      return (acc += `<strong>${curr}</strong>`);\n    }\n    return (acc += ' ' + curr);\n  }, '');\n\nconst CategoryItemList: FC<Props> = ({\n  items,\n  title,\n  titleIconCode,\n  linkBack,\n}) => {\n  const lang = gLang();\n  const collator = new Intl.Collator([lang]);\n  items.sort((a, b) => collator.compare(a.name, b.name));\n\n  const styledTitle = makeFirstWordBold(title);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.header}>\n        <h2>\n          {titleIconCode && (\n            <ContentIcon code={titleIconCode} className={styles.icon} />\n          )}\n          <span dangerouslySetInnerHTML={{ __html: styledTitle }} />\n        </h2>\n        {linkBack ? (\n          <Link className={styles.linkBack} to={linkBack.slug}>\n            <KeyboardArrowLeft\n              style={{ fontSize: 18 }}\n              className={styles.chevron}\n            />{' '}\n            <span>\n              {I18n('back_to')}&nbsp;{linkBack.title}\n            </span>\n          </Link>\n        ) : (\n          <hr />\n        )}\n      </div>\n      {items.map((item, i) => (\n        <CategoryItem key={`${item.iconCode}${i}`} {...item} />\n      ))}\n    </div>\n  );\n};\n\nexport default CategoryItemList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { useLocation } from '@reach/router';\nimport { IMeasureAreaFragment } from 'graphql-types';\nimport CategoryItemList from './category-item-list';\nimport I18n from '../i18n';\n\ninterface IProps {\n  data: IMeasureAreaFragment[];\n}\n\nconst MeasureAreaList: React.FC<IProps> = ({ data }) => {\n  const location = useLocation();\n\n  const listItems = data\n    .filter(({ relationships }) => relationships.measure !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === location.pathname,\n    }));\n  return (\n    <CategoryItemList items={listItems} title={I18n('current_measures')} />\n  );\n};\n\nexport const query = graphql`\n  fragment MeasureArea on measure_type {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      measure {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default MeasureAreaList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ISituationAreaFragment } from 'graphql-types';\nimport { useLocation } from '@reach/router';\nimport CategoryItemList from './category-item-list';\nimport I18n from '../i18n';\n\ninterface IProps {\n  data: ISituationAreaFragment[];\n}\n\nconst SituationAreaList: React.FC<IProps> = ({ data }) => {\n  const location = useLocation();\n\n  const listItems = data\n    .filter(({ relationships }) => relationships.situation !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === location.pathname,\n    }));\n  return <CategoryItemList items={listItems} title={I18n('life_situations')} />;\n};\n\nexport const query = graphql`\n  fragment SituationArea on area {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      situation {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default SituationAreaList;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './subtitle.module.scss';\n\nconst Subtitle: React.FC<{ className?: string }> = ({\n  children,\n  className,\n}) => {\n  return <p className={classNames(styles.subtitle, className)}>{children}</p>;\n};\n\nexport default Subtitle;\n","import React from 'react';\n\nimport Headline from '@/components/headline';\nimport Subtitle from '@/components/subtitle';\n\nimport styles from './topic-detail.module.scss';\n\ninterface IProps {\n  title: string;\n  titleIconCode?: string;\n  processedContent: string;\n  subtitle?: string;\n}\n\nconst TopicDetail: React.FC<IProps> = ({\n  title,\n  titleIconCode,\n  processedContent,\n  children,\n  subtitle,\n}) => {\n  return (\n    <div className={styles.topicDetail}>\n      <Headline iconCode={titleIconCode}>{title}</Headline>\n      <article className=\"bg-white rounded p-2 p-md-3 pb-3 mb-1\">\n        {subtitle && <Subtitle>{subtitle}</Subtitle>}\n        <div\n          dangerouslySetInnerHTML={{\n            __html: processedContent,\n          }}\n        />\n        {children}\n      </article>\n    </div>\n  );\n};\n\nexport default TopicDetail;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Room');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"\n}), 'Event');","import React from 'react';\n\nimport { Room, Event } from '@material-ui/icons';\nimport { IRegion } from '@graphql-types';\nimport Time from '../time';\nimport I18n from '../i18n';\n\ninterface IProps {\n  icon: React.ReactNode;\n}\n\nconst Marker: React.FC<IProps> = ({ icon, children }) => {\n  return (\n    <div className=\"d-flex align-items-center mb-1 color-blue\">\n      {icon}\n      &nbsp;\n      <span className=\"text-uppercase font-weight-medium\">{children}</span>\n    </div>\n  );\n};\n\ninterface IRegionsMarkerProps {\n  regions: Pick<IRegion, 'name'>[];\n}\n\nexport const RegionsMarker: React.FC<IRegionsMarkerProps> = ({ regions }) => (\n  <Marker icon={<Room />}>\n    {regions.map((region) => region.name).join(', ')}\n  </Marker>\n);\n\ninterface ITimeProps {\n  validFrom: string;\n  validTo: string;\n  displayTime: boolean;\n}\n\nexport const TimeMarker: React.FC<ITimeProps> = ({\n  validFrom,\n  validTo,\n  displayTime,\n}) => (\n  <Marker icon={<Event />}>\n    {validFrom && (\n      <Time\n        displayTime={displayTime}\n        datetime={validFrom}\n        prefix={`${I18n('from')} `}\n      />\n    )}\n    {validTo && (\n      <Time\n        displayTime={displayTime}\n        datetime={validTo}\n        prefix={`${I18n('to')} `}\n      />\n    )}\n  </Marker>\n);\n\nexport default Marker;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"accordion-section-module--section--BMIm5\",\"sectionHeading\":\"accordion-section-module--sectionHeading--1aw0-\",\"sectionButton\":\"accordion-section-module--sectionButton--1rqdf\",\"sectionContent\":\"accordion-section-module--sectionContent--3m_BR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentBoxTitle\":\"content-box-module--contentBoxTitle--3E5Vo\",\"contentBoxDescription\":\"content-box-module--contentBoxDescription--O2FI4\",\"contentBox\":\"content-box-module--contentBox--3WK0J\",\"contentBoxNoPadding\":\"content-box-module--contentBoxNoPadding--2vKlZ\",\"contentBox--white\":\"content-box-module--contentBox--white--2fBcG\",\"contentBoxWhite\":\"content-box-module--contentBox--white--2fBcG\",\"contentBox--blue\":\"content-box-module--contentBox--blue--243gT\",\"contentBoxBlue\":\"content-box-module--contentBox--blue--243gT\",\"content-box-btn\":\"content-box-module--content-box-btn--281FR\",\"contentBoxBtn\":\"content-box-module--content-box-btn--281FR\",\"content-box-btn--blue\":\"content-box-module--content-box-btn--blue--22dPm\",\"contentBoxBtnBlue\":\"content-box-module--content-box-btn--blue--22dPm\"};","import React from 'react';\nimport classNames from 'classnames';\nimport Button, { ButtonVariant } from '@/components/button';\nimport Col from '@/components/col';\n\nimport styles from './content-box.module.scss';\n\ninterface Props {\n  title?: string;\n  description?: string;\n  boldedTitleCount?: number;\n  buttonVariant?: ButtonVariant;\n  buttonText?: string;\n  buttonHref?: string;\n  variant?: 'white' | 'blue';\n  noPadding?: boolean;\n}\n\nconst ContentBox: React.FC<Props> = ({\n  children,\n  title,\n  description,\n  buttonVariant,\n  buttonText,\n  buttonHref,\n  variant = '',\n  noPadding,\n}) => {\n  return (\n    // contentBox--white\n    // contentBox--blue\n    <div\n      className={classNames(\n        styles.contentBox,\n        styles[`contentBox--${variant}`],\n        noPadding && styles.contentBoxNoPadding,\n        'row',\n      )}\n    >\n      <Col col={12}>\n        {title && (\n          <h2\n            className={styles.contentBoxTitle}\n            dangerouslySetInnerHTML={{\n              __html: title,\n            }}\n          />\n        )}\n        {description && (\n          <p className={styles.contentBoxDescription}>{description}</p>\n        )}\n        {children}\n        {buttonText && (\n          <Button\n            href={buttonHref}\n            variant={buttonVariant}\n            text={buttonText}\n            className={classNames(styles.contentBoxBtn, {\n              [styles.contentBoxBtnBlue]: variant === 'white',\n            })}\n          />\n        )}\n      </Col>\n    </div>\n  );\n};\n\nexport default ContentBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categoryItem\":\"category-item-module--categoryItem--3V8HX\",\"chevron\":\"category-item-module--chevron--D9HLp\",\"categoryItemIcon\":\"category-item-module--categoryItemIcon--3wAWD\",\"categoryItemTitle\":\"category-item-module--categoryItemTitle--ErF2o\",\"isActive\":\"category-item-module--isActive--3zXaE\"};","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport { Add, Clear } from '@material-ui/icons';\n\nimport styles from './accordion-section.module.scss';\nimport Button from '@/components/button';\n\nexport interface Section {\n  title: string;\n  text: string;\n}\n\nconst AccordionSection: React.FC<Section> = ({ title, text }) => {\n  const [opened, setOpened] = useState(false);\n\n  const toggleSection = useCallback(() => {\n    setOpened(!opened);\n  }, [opened]);\n\n  return (\n    <div className={styles.section}>\n      <div\n        className={classNames(\n          styles.sectionHeading,\n          'd-flex',\n          'justify-content-between',\n          'align-items-center',\n        )}\n        onClick={toggleSection}\n      >\n        {title}\n        <Button\n          icon={opened ? <Clear /> : <Add />}\n          className={classNames(\n            styles.sectionButton,\n            'd-flex',\n            'justify-content-center',\n            'align-items-center',\n          )}\n          variant=\"yellow\"\n        />\n      </div>\n      {opened && <div className={styles.sectionContent}>{text}</div>}\n    </div>\n  );\n};\n\nexport default AccordionSection;\n","import React from 'react';\nimport AccordionSection, {\n  Section,\n} from '@/components/accordion/accordion-section';\n\ninterface Props {\n  data: Section[];\n}\n\nconst Accordion: React.FC<Props> = ({ data }) => {\n  return (\n    <>\n      {data.map((item, index) => (\n        <AccordionSection key={index} {...item} />\n      ))}\n    </>\n  );\n};\n\nexport default Accordion;\n","import React from 'react';\n\nimport { IRelatedMeasureFragment } from '@graphql-types';\nimport { graphql, Link } from 'gatsby';\nimport { RegionsMarker, TimeMarker } from '../marker';\n\nimport styles from './related-measure.module.scss';\n\ninterface IProps {\n  measure: IRelatedMeasureFragment;\n}\n\nconst RelatedMeasure: React.FC<IProps> = ({ measure }) => {\n  return (\n    <div className={styles.relatedMeasure}>\n      <Link className=\"color-blue\" to={measure.path.alias}>\n        {measure.title}\n      </Link>\n      <RegionsMarker regions={measure.relationships.region} />\n      <TimeMarker\n        displayTime\n        validFrom={measure.valid_from}\n        validTo={measure.valid_to}\n      />\n    </div>\n  );\n};\n\nexport const query = graphql`\n  fragment RelatedMeasure on measure {\n    title\n    path {\n      alias\n      langcode\n    }\n    valid_from\n    valid_to\n    relationships {\n      region {\n        name\n      }\n    }\n  }\n`;\n\nexport default RelatedMeasure;\n","import React from 'react';\nimport Link from '@/components/link';\nimport styles from './link-styled.module.scss';\nimport { KeyboardArrowRight } from '@material-ui/icons';\n\ninterface Props {\n  title: string;\n  to: string;\n}\n\nconst LinkStyled: React.FC<Props> = ({ to, title }) => {\n  return (\n    <p className={styles.linkStyled}>\n      <Link to={to} title={title} className={styles.linkStyledLink}>\n        {title}\n        <KeyboardArrowRight\n          style={{ fontSize: 20 }}\n          className={styles.linkStyledIcon}\n        />\n      </Link>\n    </p>\n  );\n};\n\nexport default LinkStyled;\n","import React from 'react';\nimport LinkStyled from '@/components/link-styled';\n\ninterface Props {\n  links: Array<{\n    path?: { alias?: string; langcode?: string };\n    title?: string;\n  }>;\n}\n\nconst LinkList: React.FC<Props> = ({ links }) => {\n  return (\n    <div>\n      {links.length !== 0\n        ? links.map((link, i) => (\n            <LinkStyled key={i} title={link.title} to={link.path.alias} />\n          ))\n        : ''}\n    </div>\n  );\n};\n\nexport default LinkList;\n","import React from 'react';\n\nimport Container from '@/components/container';\nimport Link from '@/components/link';\nimport I18n from '@/components/i18n';\n\nimport Accordion from '../accordion';\nimport ContentBox from '../content-box';\nimport { ISituationDetailFragment } from '@graphql-types';\nimport { graphql } from 'gatsby';\nimport TopicDetail from '../topic-detail';\nimport RelatedMeasure from '../related-measure';\nimport LinkList from '../link-list';\n\ninterface IProps {\n  situation: ISituationDetailFragment;\n}\n\nconst SituationDetail: React.FC<IProps> = ({ situation }) => {\n  const relatedSituations = situation.relationships.related_situations;\n  const faq = situation.questions_answers;\n\n  const hasFaq = Boolean(faq.length);\n  const hasRelatedLinks = Boolean(situation.links.length);\n  const hasRelatedMeasures = Boolean(situation.relationships.measures.length);\n  const hasRelatedSituations = Boolean(relatedSituations.length);\n\n  const iconCode =\n    situation.relationships?.icon?.code ||\n    situation.relationships?.situation_type?.relationships?.icon?.code;\n\n  return (\n    <>\n      <TopicDetail\n        title={situation.title}\n        titleIconCode={iconCode}\n        processedContent={situation?.content?.processed}\n      >\n        {hasRelatedMeasures && (\n          <div className=\"mt-2\">\n            <hr />\n            <h3 className=\"mb-1 color-blue-dark\">{I18n('related_measures')}</h3>\n            {situation.relationships.measures.map((measure) => (\n              <RelatedMeasure key={measure.path.alias} measure={measure} />\n            ))}\n          </div>\n        )}\n        {hasRelatedLinks && (\n          <div className=\"mt-2\">\n            <hr />\n            <h3 className=\"mb-1 color-blue-dark\">{I18n('related')}</h3>\n            <div>\n              {situation.links.map((link, index) => (\n                <div key={index}>\n                  <Link className=\"color-blue mb-1\" to={link.uri}>\n                    {link.title}\n                  </Link>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </TopicDetail>\n      <Container>\n        {hasFaq && (\n          <ContentBox variant=\"blue\" title={I18n('faq')} boldedTitleCount={2}>\n            <Accordion\n              data={situation.questions_answers.map((item) => ({\n                title: item.question,\n                text: item.value,\n              }))}\n            />\n          </ContentBox>\n        )}\n        {hasRelatedSituations && (\n          <ContentBox\n            title={I18n('similar_topics')}\n            boldedTitleCount={1}\n            variant=\"blue\"\n          >\n            <LinkList links={relatedSituations} />\n          </ContentBox>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport const query = graphql`\n  fragment SituationDetail on situation {\n    title\n    content {\n      processed\n    }\n    links {\n      uri\n      title\n    }\n    relationships {\n      region {\n        name\n      }\n      icon {\n        code\n      }\n      situation_type {\n        name\n        path {\n          alias\n        }\n        relationships {\n          icon {\n            code\n          }\n        }\n      }\n      measures {\n        ...RelatedMeasure\n      }\n      related_situations {\n        title\n        path {\n          alias\n          langcode\n        }\n      }\n    }\n    path {\n      alias\n    }\n    questions_answers {\n      question\n      value\n    }\n    changed\n    valid_from\n    valid_to\n  }\n`;\n\nexport default SituationDetail;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ISituationPageQuery, ISitePageContext } from 'graphql-types';\nimport Layout from '@/layouts/default-layout';\nimport SituationDetail from '@/components/situation-detail/situation-detail';\nimport Container from '@/components/container';\nimport { SchemaComp } from '@/components/schema/schema';\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport I18n from '@/components/i18n';\nimport Breadcrumb from '@/components/breadcrumb';\nimport DesktopLeftMenuLayout from '@/layouts/desktop-left-menu-layout';\nimport CategoryItemList from '@/components/category-item-list';\n\ninterface IProps {\n  data: ISituationPageQuery;\n  pageContext: ISitePageContext;\n}\n\nconst Page: React.FC<IProps> = ({ data, pageContext }) => {\n  const relatedSituations: React.ComponentProps<\n    typeof CategoryItemList\n  >['items'] = data.situationArea.relationships.situation.map((situation) => ({\n    id: situation.id,\n    name: situation.title,\n    path: situation.path.alias,\n    isActive: situation.path.alias === pageContext.slug,\n  }));\n  return (\n    <Layout pageContext={pageContext}>\n      <Seo\n        title={data.situation.title}\n        description={\n          data.situation.meta_description ||\n          I18n('current_measures_overview_meta')\n        }\n        pagePath={data.situation.path.alias}\n        htmlLanguage={pageContext.langCode}\n      />\n      <SchemaComp\n        datePublished={data.situation.valid_from}\n        dateModified={data.situation.changed}\n        title={data.situation.title}\n        langCode={pageContext.langCode}\n        isBlogPost\n        body={\n          data.situation.content\n            ? data.situation.content.processed\n            : data.situation.meta_description\n        }\n        description={data.situation.meta_description}\n        breadcrumbItems={[\n          { title: I18n('home'), url: '/' },\n          {\n            title: I18n('life_situations'),\n            url: I18n(`slug_situations`),\n          },\n          {\n            title: data.situation.relationships?.situation_type?.name,\n            url: data.situation.relationships?.situation_type?.path?.alias,\n          },\n          data.situation.title,\n        ]}\n      />\n      <Container>\n        <div className=\"pt-1\">\n          <Breadcrumb\n            items={[\n              { title: I18n('home'), url: '/' },\n              {\n                title: I18n('life_situations'),\n                url: I18n(`slug_situations`),\n              },\n              {\n                title: data.situation.relationships?.situation_type?.name,\n                url: data.situation.relationships?.situation_type?.path?.alias,\n              },\n              data.situation.title,\n            ]}\n            variant=\"inverse\"\n          />\n        </div>\n        <DesktopLeftMenuLayout\n          menu={\n            <CategoryItemList\n              items={relatedSituations}\n              linkBack={{\n                slug: pageContext.listSlug,\n                title: I18n('life_situations'),\n              }}\n              title={data.situationArea.name}\n              titleIconCode={data.situationArea?.relationships?.icon?.code}\n            />\n          }\n          hideMenuOnMobile\n        >\n          <SituationDetail situation={data.situation} />\n        </DesktopLeftMenuLayout>\n      </Container>\n    </Layout>\n  );\n};\nexport default Page;\n\nexport const query = graphql`\n  query SituationPage($slug: String!, $listSlug: String!, $langCode: String!) {\n    situation(path: { alias: { eq: $slug }, langcode: { eq: $langCode } }) {\n      title\n      meta_description\n      content {\n        processed\n      }\n      path {\n        alias\n      }\n      valid_from\n      ...SituationDetail\n    }\n    situationArea: area(path: { alias: { eq: $listSlug } }) {\n      name\n      path {\n        alias\n      }\n      relationships {\n        icon {\n          code\n        }\n        situation {\n          id\n          title\n          path {\n            alias\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './variants.module.scss';\n\nimport Link from '@/components/link';\n\nexport type ButtonVariant =\n  | 'contained'\n  | 'outline'\n  | 'yellow'\n  | 'secondary'\n  | 'outline-black'\n  | 'outline-yellow'\n  | 'small-black';\n\nconst getButtonClassName = (variant?: ButtonVariant): string => {\n  return classNames(\n    { btn: variant !== 'small-black' },\n    { 'btn-primary': variant === 'contained' },\n    { 'btn-outline-primary': variant === 'outline' },\n    { 'btn-outline-dark': variant === 'outline-black' },\n    { 'btn-outline-yellow': variant === 'outline-yellow' },\n    { 'btn-yellow': variant === 'yellow' },\n    { 'text-black': variant === 'outline-black' },\n    { 'btn-secondary': variant === 'secondary' },\n    { [styles.btnSmallBlack]: variant === 'small-black' },\n  );\n};\n\ntype IButtonBase = {\n  text?: string;\n  variant?: ButtonVariant;\n  className?: string;\n  icon?: React.ReactNode;\n};\n\ntype ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> &\n  IButtonBase & { href?: undefined };\n\ntype AnchorProps = React.AnchorHTMLAttributes<HTMLAnchorElement> &\n  IButtonBase & { href: string };\n\n// Input/output options\ntype Overload = {\n  (props: ButtonProps): JSX.Element;\n  (props: AnchorProps): JSX.Element;\n};\n\n// Guard to check if href exists in props\nconst hasHref = (props: ButtonProps | AnchorProps): props is AnchorProps =>\n  'href' in props;\n\nconst Button: Overload = (props: ButtonProps | AnchorProps) => {\n  const { className, variant, ...restCommonProps } = props;\n\n  const composedClassName = classNames(getButtonClassName(variant), className);\n\n  if (hasHref(restCommonProps)) {\n    const { href, text, icon, ...rest } = restCommonProps;\n    return (\n      <Link\n        dataTestId=\"button-link\"\n        to={href}\n        className={composedClassName}\n        {...rest}\n      >\n        {text}\n        {icon}\n      </Link>\n    );\n  }\n\n  const { text, icon, ...rest } = restCommonProps as ButtonProps;\n\n  return (\n    <button type=\"button\" className={composedClassName} {...rest}>\n      {text}\n      {icon}\n    </button>\n  );\n};\n\nexport default Button;\n"],"sourceRoot":""}
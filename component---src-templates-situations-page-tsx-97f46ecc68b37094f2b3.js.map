{"version":3,"sources":["webpack:///./src/components/schema/schema.tsx","webpack:///./src/components/button/variants.module.scss","webpack:///./src/components/time/time.tsx","webpack:///./src/components/subtitle/subtitle.module.scss","webpack:///./src/components/related-measure/related-measure.module.scss","webpack:///./src/components/topic-detail/topic-detail.module.scss","webpack:///./src/components/headline/headline.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./node_modules/@material-ui/icons/esm/KeyboardArrowRight.js","webpack:///./src/components/link-styled/link-styled.module.scss","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/components/subtitle/subtitle.tsx","webpack:///./src/components/topic-detail/topic-detail.tsx","webpack:///./node_modules/@material-ui/icons/esm/Room.js","webpack:///./node_modules/@material-ui/icons/esm/Event.js","webpack:///./src/components/marker/marker.tsx","webpack:///./src/components/accordion/accordion-section.module.scss","webpack:///./src/components/content-box/content-box.module.scss","webpack:///./src/components/content-box/content-box.tsx","webpack:///./src/components/breadcrumb/breadcrumb.module.scss","webpack:///./node_modules/@material-ui/icons/esm/Clear.js","webpack:///./node_modules/@material-ui/icons/esm/Add.js","webpack:///./src/components/accordion/accordion-section.tsx","webpack:///./src/components/accordion/accordion.tsx","webpack:///./src/components/related-measure/related-measure.tsx","webpack:///./src/components/situation-detail/situation-detail.tsx","webpack:///./src/components/link-styled/linkStyled.tsx","webpack:///./src/components/link-list/link-list.tsx","webpack:///./src/templates/situations/page.tsx","webpack:///./src/components/button/button.tsx"],"names":["SchemaComp","canonicalUrl","datePublished","defaultTitle","description","isBlogPost","organization","title","body","url","baseSchema","name","alternateName","schema","itemListElement","position","item","articleBody","headline","publisher","mainEntityOfPage","property","content","type","JSON","module","exports","datetime","prefix","suffix","dateTime","Date","toLocaleString","year","month","day","hour","minute","timeZone","children","className","styles","getBreadcrumbClasses","variant","classNames","classes","items","getItemClasses","index","aria-label","key","isNavItem","to","label","createElement","d","breadcrumbItems","processedContent","subtitle","topicDetail","dangerouslySetInnerHTML","__html","createSvgIcon","Marker","icon","RegionsMarker","regions","region","TimeMarker","validFrom","validTo","I18n","buttonVariant","buttonText","buttonHref","noPadding","col","contentBoxDescription","href","text","useState","opened","setOpened","toggleSection","useCallback","section","onClick","sectionContent","data","measure","relatedMeasure","alias","valid_to","situation","hasRelatedLinks","Boolean","hasRelatedMeasures","processed","link","uri","boldedTitleCount","value","linkStyled","linkStyledLink","style","fontSize","linkStyledIcon","links","query","linksData","pagePath","htmlLanguage","langcode","getClass","btn","disabled","linkTitle","dataTestId"],"mappings":"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","file":"component---src-templates-situations-page-tsx-97f46ecc68b37094f2b3.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\n\ninterface IOrganization {\n  url: string;\n  name: string;\n}\ninterface IProps {\n  canonicalUrl: string;\n  body: string;\n  datePublished: string;\n  defaultTitle: string;\n  description: string;\n  isBlogPost: boolean;\n  organization: IOrganization;\n  title: string;\n  url: string;\n}\nexport const SchemaComp: React.FC<IProps> = ({\n  canonicalUrl,\n  datePublished,\n  defaultTitle,\n  description,\n  isBlogPost,\n  organization,\n  title,\n  body,\n  url,\n}) => {\n  const baseSchema = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url,\n      name: title,\n      alternateName: defaultTitle,\n    },\n  ];\n\n  const schema = isBlogPost\n    ? [\n        ...baseSchema,\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': url,\n                name: title,\n              },\n            },\n          ],\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BlogPosting',\n          url,\n          name: title,\n          articleBody: body,\n          alternateName: defaultTitle,\n          headline: title,\n          description,\n          publisher: {\n            '@type': 'Organization',\n            url: organization.url,\n            name: organization.name,\n          },\n          mainEntityOfPage: {\n            '@type': 'WebSite',\n            '@id': canonicalUrl,\n          },\n          datePublished,\n        },\n      ]\n    : baseSchema;\n\n  return (\n    <Helmet>\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <script type=\"application/ld+json\">{JSON.stringify(schema)}</script>\n    </Helmet>\n  );\n};\n\nexport default SchemaComp;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-small-black\":\"variants-module--btn-small-black--398fP\",\"btnSmallBlack\":\"variants-module--btn-small-black--398fP\"};","import React from 'react';\n\ninterface Props {\n  datetime: string;\n  prefix?: string;\n  suffix?: string;\n}\n\nconst Time: React.FC<Props> = ({ datetime, prefix, suffix = ' ' }) => {\n  return (\n    <time dateTime={datetime}>\n      {prefix}\n      {new Date(datetime).toLocaleString('cs-CZ', {\n        year: 'numeric',\n        month: 'numeric',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        timeZone: 'Europe/Prague',\n      })}\n      {suffix}\n    </time>\n  );\n};\n\nexport default Time;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"subtitle-module--subtitle--3-_JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"relatedMeasure\":\"related-measure-module--relatedMeasure--1ipsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topicDetail\":\"topic-detail-module--topicDetail--kRP4b\"};","import React from 'react';\n\nimport styles from './headline.module.scss';\n\nconst Headline: React.FC = ({ children }) => {\n  return <h1 className={styles.headline}>{children}</h1>;\n};\n\nexport default Headline;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  label={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkStyled\":\"link-styled-module--linkStyled--_N7FG\",\"linkStyledLink\":\"link-styled-module--linkStyledLink--2U7Xp\",\"linkStyledIcon\":\"link-styled-module--linkStyledIcon--1ApnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"headline-module--headline--2EZlD\"};","import React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './subtitle.module.scss';\n\nconst Subtitle: React.FC<{ className?: string }> = ({\n  children,\n  className,\n}) => {\n  return <p className={classNames(styles.subtitle, className)}>{children}</p>;\n};\n\nexport default Subtitle;\n","import React from 'react';\n\nimport Container from '@/components/container';\nimport Breadcrumb from '@/components/breadcrumb';\nimport Headline from '@/components/headline';\nimport Subtitle from '@/components/subtitle';\n\nimport styles from './topic-detail.module.scss';\n\ninterface IProps {\n  breadcrumbItems: React.ComponentProps<typeof Breadcrumb>['items'];\n  title: string;\n  processedContent: string;\n  subtitle?: string;\n}\n\nconst TopicDetail: React.FC<IProps> = ({\n  breadcrumbItems,\n  title,\n  processedContent,\n  children,\n  subtitle,\n}) => {\n  return (\n    <div className={styles.topicDetail}>\n      <Container>\n        <div className=\"pt-1\">\n          <Breadcrumb items={breadcrumbItems} variant=\"inverse\" />\n        </div>\n        <div className=\"mt-3\">\n          <Headline>{title}</Headline>\n        </div>\n        <article className=\"bg-white rounded p-2 pb-3 mb-1\">\n          {subtitle && <Subtitle>{subtitle}</Subtitle>}\n          <div\n            dangerouslySetInnerHTML={{\n              __html: processedContent,\n            }}\n          />\n          {children}\n        </article>\n      </Container>\n    </div>\n  );\n};\n\nexport default TopicDetail;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Room');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"\n}), 'Event');","import React from 'react';\n\nimport { Room, Event } from '@material-ui/icons';\nimport { IRegion } from 'graphql-types';\nimport Time from '../time';\nimport I18n from '../i18n';\n\ninterface IProps {\n  icon: React.ReactNode;\n}\n\nconst Marker: React.FC<IProps> = ({ icon, children }) => {\n  return (\n    <div className=\"d-flex align-items-center mb-1 color-blue\">\n      {icon}\n      &nbsp;\n      <span className=\"text-uppercase font-weight-medium\">{children}</span>\n    </div>\n  );\n};\n\ninterface IRegionsMarkerProps {\n  regions: Pick<IRegion, 'name'>[];\n}\n\nexport const RegionsMarker: React.FC<IRegionsMarkerProps> = ({ regions }) => (\n  <Marker icon={<Room />}>\n    {regions.map((region) => region.name).join(',')}\n  </Marker>\n);\n\ninterface ITimeProps {\n  validFrom: string;\n  validTo: string;\n}\n\nexport const TimeMarker: React.FC<ITimeProps> = ({ validFrom, validTo }) => (\n  <Marker icon={<Event />}>\n    {validFrom && <Time datetime={validFrom} prefix={`${I18n('from')} `} />}\n    {validTo && <Time datetime={validTo} prefix={`${I18n('to')} `} />}\n  </Marker>\n);\n\nexport default Marker;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"accordion-section-module--section--BMIm5\",\"sectionHeading\":\"accordion-section-module--sectionHeading--1aw0-\",\"sectionButton\":\"accordion-section-module--sectionButton--1rqdf\",\"sectionContent\":\"accordion-section-module--sectionContent--3m_BR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentBoxTitle\":\"content-box-module--contentBoxTitle--3E5Vo\",\"contentBoxDescription\":\"content-box-module--contentBoxDescription--O2FI4\",\"contentBox\":\"content-box-module--contentBox--3WK0J\",\"contentBoxNoPadding\":\"content-box-module--contentBoxNoPadding--2vKlZ\",\"contentBox--white\":\"content-box-module--contentBox--white--2fBcG\",\"contentBoxWhite\":\"content-box-module--contentBox--white--2fBcG\",\"contentBox--blue\":\"content-box-module--contentBox--blue--243gT\",\"contentBoxBlue\":\"content-box-module--contentBox--blue--243gT\",\"content-box-btn\":\"content-box-module--content-box-btn--281FR\",\"contentBoxBtn\":\"content-box-module--content-box-btn--281FR\",\"content-box-btn--blue\":\"content-box-module--content-box-btn--blue--22dPm\",\"contentBoxBtnBlue\":\"content-box-module--content-box-btn--blue--22dPm\"};","import React from 'react';\nimport classNames from 'classnames';\nimport Button, { ButtonVariant } from '@/components/button';\nimport Col from '@/components/col';\n\nimport styles from './content-box.module.scss';\n\ninterface Props {\n  title?: string;\n  description?: string;\n  boldedTitleCount?: number;\n  buttonVariant?: ButtonVariant;\n  buttonText?: string;\n  buttonHref?: string;\n  variant?: 'white' | 'blue';\n  noPadding?: boolean;\n}\n\nconst ContentBox: React.FC<Props> = ({\n  children,\n  title,\n  description,\n  buttonVariant,\n  buttonText,\n  buttonHref,\n  variant = '',\n  noPadding,\n}) => {\n  return (\n    // contentBox--white\n    // contentBox--blue\n    <div\n      className={classNames(\n        styles.contentBox,\n        styles[`contentBox--${variant}`],\n        noPadding && styles.contentBoxNoPadding,\n        'row',\n      )}\n    >\n      <Col col={12}>\n        {title && (\n          <h2\n            className={styles.contentBoxTitle}\n            dangerouslySetInnerHTML={{\n              __html: title,\n            }}\n          />\n        )}\n        {description && (\n          <p className={styles.contentBoxDescription}>{description}</p>\n        )}\n        {children}\n        {buttonText && (\n          <Button\n            href={buttonHref}\n            variant={buttonVariant}\n            text={buttonText}\n            className={classNames(styles.contentBoxBtn, {\n              [styles.contentBoxBtnBlue]: variant === 'white',\n            })}\n          />\n        )}\n      </Col>\n    </div>\n  );\n};\n\nexport default ContentBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport { Add, Clear } from '@material-ui/icons';\n\nimport styles from './accordion-section.module.scss';\nimport Button from '@/components/button';\n\nexport interface Section {\n  title: string;\n  text: string;\n}\n\nconst AccordionSection: React.FC<Section> = ({ title, text }) => {\n  const [opened, setOpened] = useState(false);\n\n  const toggleSection = useCallback(() => {\n    setOpened(!opened);\n  }, [opened]);\n\n  return (\n    <div className={styles.section}>\n      <div\n        className={classNames(\n          styles.sectionHeading,\n          'd-flex',\n          'justify-content-between',\n          'align-items-center',\n        )}\n        onClick={toggleSection}\n      >\n        {title}\n        <Button\n          icon={opened ? <Clear /> : <Add />}\n          className={classNames(\n            styles.sectionButton,\n            'd-flex',\n            'justify-content-center',\n            'align-items-center',\n          )}\n          variant=\"yellow\"\n        />\n      </div>\n      {opened && <div className={styles.sectionContent}>{text}</div>}\n    </div>\n  );\n};\n\nexport default AccordionSection;\n","import React from 'react';\nimport AccordionSection, {\n  Section,\n} from '@/components/accordion/accordion-section';\n\ninterface Props {\n  data: Section[];\n}\n\nconst Accordion: React.FC<Props> = ({ data }) => {\n  return (\n    <>\n      {data.map((item, index) => (\n        <AccordionSection key={index} {...item} />\n      ))}\n    </>\n  );\n};\n\nexport default Accordion;\n","import React from 'react';\n\nimport { IRelatedMeasureFragment } from 'graphql-types';\nimport { graphql, Link } from 'gatsby';\nimport { RegionsMarker, TimeMarker } from '../marker';\n\nimport styles from './related-measure.module.scss';\n\ninterface IProps {\n  measure: IRelatedMeasureFragment;\n}\n\nconst RelatedMeasure: React.FC<IProps> = ({ measure }) => {\n  return (\n    <div className={styles.relatedMeasure}>\n      <Link className=\"color-blue\" to={measure.path.alias}>\n        {measure.title}\n      </Link>\n      <RegionsMarker regions={measure.relationships.region} />\n      <TimeMarker validFrom={measure.valid_from} validTo={measure.valid_to} />\n    </div>\n  );\n};\n\nexport const query = graphql`\n  fragment RelatedMeasure on measure {\n    title\n    path {\n      alias\n      langcode\n    }\n    valid_from\n    valid_to\n    relationships {\n      region {\n        name\n      }\n    }\n  }\n`;\n\nexport default RelatedMeasure;\n","import React from 'react';\n\nimport Container from '@/components/container';\nimport Link from '@/components/link';\nimport I18n from '@/components/i18n';\n\nimport Accordion from '../accordion';\nimport ContentBox from '../content-box';\nimport { ISituationDetailFragment } from 'graphql-types';\nimport { graphql } from 'gatsby';\nimport TopicDetail from '../topic-detail';\nimport RelatedMeasure from '../related-measure';\n\ninterface IProps {\n  situation: ISituationDetailFragment;\n}\n\nconst SituationDetail: React.FC<IProps> = ({ situation }) => {\n  const hasRelatedLinks = Boolean(situation.links.length);\n  const hasRelatedMeasures = Boolean(situation.relationships.measures.length);\n  return (\n    <>\n      <TopicDetail\n        breadcrumbItems={[\n          { title: I18n('home'), url: '/' },\n          {\n            title: I18n('life_situations'),\n            url: I18n(`slug_situations`),\n          },\n          {\n            title: situation.relationships?.situation_type?.name,\n            url: situation.relationships?.situation_type?.path?.alias,\n          },\n          situation.title,\n        ]}\n        title={situation.title}\n        processedContent={situation?.content?.processed}\n      >\n        {hasRelatedMeasures && (\n          <div className=\"mt-2\">\n            <hr />\n            <h3 className=\"mb-1 color-blue-dark\">Související opatření</h3>\n            {situation.relationships.measures.map((measure) => (\n              <RelatedMeasure key={measure.path.alias} measure={measure} />\n            ))}\n          </div>\n        )}\n        {hasRelatedLinks && (\n          <div className=\"mt-2\">\n            <hr />\n            <h3 className=\"mb-1 color-blue-dark\">{I18n('related')}</h3>\n            <div>\n              {situation.links.map((link, index) => (\n                <div key={index}>\n                  <Link className=\"color-blue mb-1\" to={link.uri}>\n                    {link.title}\n                  </Link>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </TopicDetail>\n      <Container>\n        {situation.questions_answers?.length ? (\n          // TODO: localize\n          <ContentBox variant=\"blue\" title={I18n('faq')} boldedTitleCount={2}>\n            <Accordion\n              data={situation.questions_answers.map((item) => ({\n                title: item.question,\n                text: item.value,\n              }))}\n            />\n          </ContentBox>\n        ) : (\n          ''\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport const query = graphql`\n  fragment SituationDetail on situation {\n    title\n    content {\n      processed\n    }\n    links {\n      uri\n      title\n    }\n    relationships {\n      region {\n        name\n      }\n      situation_type {\n        name\n        path {\n          alias\n        }\n      }\n      measures {\n        ...RelatedMeasure\n      }\n    }\n    path {\n      alias\n    }\n    questions_answers {\n      question\n      value\n    }\n    changed\n    valid_from\n    valid_to\n  }\n`;\n\nexport default SituationDetail;\n","import React from 'react';\nimport Link from '@/components/link';\nimport styles from './link-styled.module.scss';\nimport { KeyboardArrowRight } from '@material-ui/icons';\n\ninterface Props {\n  label: string;\n  to: string;\n}\n\nconst LinkStyled: React.FC<Props> = ({ to, label }) => {\n  return (\n    <p className={styles.linkStyled}>\n      <Link to={to} label={label} className={styles.linkStyledLink}>\n        {label}\n        <KeyboardArrowRight\n          style={{ fontSize: 20 }}\n          className={styles.linkStyledIcon}\n        />\n      </Link>\n    </p>\n  );\n};\n\nexport default LinkStyled;\n","import React from 'react';\nimport LinkStyled from '@/components/link-styled';\n\ninterface Props {\n  links: Array<{\n    path?: { alias?: string; langcode?: string };\n    title?: string;\n  }>;\n}\n\nconst LinkList: React.FC<Props> = ({ links }) => {\n  return (\n    <div>\n      {links.length !== 0\n        ? links.map((link, i) => (\n            <LinkStyled key={i} label={link.title} to={link.path.alias} />\n          ))\n        : ''}\n    </div>\n  );\n};\n\nexport default LinkList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { IQuery } from 'graphql-types';\nimport Layout from '@/layouts/default-layout';\nimport SituationDetail from '@/components/situation-detail/situation-detail';\nimport ContentBox from '@/components/content-box';\nimport LinkList from '@/components/link-list';\nimport Container from '@/components/container';\nimport { SchemaComp } from '@/components/schema/schema';\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport I18n from '@/components/i18n';\n\ninterface IProps {\n  data: IQuery;\n}\n\nconst Page: React.FC<IProps> = ({ data }) => {\n  const linksData = data.situation.relationships.related_situations;\n  return (\n    <Layout>\n      <Seo\n        title={data.situation.title}\n        description={\n          data.situation.meta_description ||\n          I18n('current_measures_overview_meta')\n        }\n        pagePath={data.situation.path.alias}\n        htmlLanguage={data.situation.langcode}\n      />\n      <SchemaComp\n        canonicalUrl={'https://covid.gov.cz' + data.situation.path.alias}\n        datePublished={data.situation.valid_from}\n        defaultTitle={data.situation.title}\n        isBlogPost\n        description={data.situation.meta_description}\n        body={data.situation.content.processed}\n        title={data.situation.title}\n        url={'https://covid.gov.cz' + data.situation.path.alias}\n        organization={{\n          url: 'https://gov.cz',\n          name: 'Portál veřejné správy',\n        }}\n      />\n      <SituationDetail situation={data.situation} />\n      <Container className=\"pt-1\">\n        {/* hide this box if no relevant topics exist */}\n        {linksData.length > 0 ? (\n          <ContentBox\n            title={I18n('similar_topics')}\n            boldedTitleCount={1}\n            variant=\"blue\"\n          >\n            <LinkList links={linksData} />\n          </ContentBox>\n        ) : (\n          ''\n        )}\n      </Container>\n    </Layout>\n  );\n};\nexport default Page;\n\nexport const query = graphql`\n  query($slug: String!) {\n    situation(path: { alias: { eq: $slug } }) {\n      title\n      meta_description\n      content {\n        processed\n      }\n      questions_answers {\n        question\n        value\n      }\n      relationships {\n        related_situations {\n          title\n          path {\n            alias\n            langcode\n          }\n        }\n      }\n      path {\n        alias\n      }\n      changed\n      valid_from\n      ...SituationDetail\n    }\n  }\n`;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './variants.module.scss';\n\nimport Link from '@/components/link';\n\nconst getClass = (variant: ButtonVariant, additionalClass?: string): string => {\n  return classNames(\n    { btn: variant !== 'small-black' },\n    { 'btn-primary': variant === 'contained' },\n    { 'btn-outline-primary': variant === 'outline' },\n    { 'btn-outline-dark': variant === 'outline-black' },\n    { 'btn-outline-yellow': variant === 'outline-yellow' },\n    { 'btn-yellow': variant === 'yellow' },\n    { 'text-black': variant === 'outline-black' },\n    { 'btn-secondary': variant === 'secondary' },\n    { [styles.btnSmallBlack]: variant === 'small-black' },\n    { [additionalClass]: additionalClass },\n  );\n};\n\nexport type ButtonVariant =\n  | 'contained'\n  | 'outline'\n  | 'yellow'\n  | 'secondary'\n  | 'outline-black'\n  | 'outline-yellow'\n  | 'small-black';\n\ninterface IProps {\n  text?: string;\n  variant?: ButtonVariant;\n  className?: string;\n  onClick?: () => void;\n  href?: string;\n  disabled?: boolean;\n  icon?: React.ReactNode;\n  linkTitle?: string;\n}\n\nconst Button: React.FC<IProps> = ({\n  variant,\n  onClick,\n  text,\n  href = '',\n  className,\n  disabled = false,\n  icon,\n  linkTitle = '',\n}) => {\n  if (href !== '' && !disabled) {\n    return (\n      <Link to={href} label={linkTitle} dataTestId=\"button-link\">\n        <button\n          type=\"button\"\n          className={getClass(variant, className)}\n          onClick={onClick || null}\n          disabled={disabled}\n        >\n          {text}\n          {icon}\n        </button>\n      </Link>\n    );\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={getClass(variant, className)}\n      onClick={onClick || null}\n      disabled={disabled}\n    >\n      {text}\n      {icon}\n    </button>\n  );\n};\n\nexport default Button;\n"],"sourceRoot":""}
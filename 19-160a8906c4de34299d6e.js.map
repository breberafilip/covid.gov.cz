{"version":3,"sources":["webpack:///../src/intersectionObserver.ts"],"names":["intersectionObserver","createIntersectionObserver","callback","window","IntersectionObserver","entries","forEach","entry","isIntersecting","rootMargin","element","observe","current","unobserve"],"mappings":"4FAEA,IAAIA,WAEYC,EAA2BC,GAEzC,MAAM,yBAA0BC,QAO3BH,IACHA,EAAuB,IAAII,sBACzB,SAACC,GACCA,EAAQC,SAAQ,SAACC,GACXA,EAAMC,gBACRN,SAIN,CAEEO,WAAY,mBAKMC,GAGtB,OAFAV,EAAqBW,QAAQD,EAAQE,oBAG/BZ,GAAwBU,EAAQE,SAClCZ,EAAqBa,UAAUH,EAAQE,uBAzBzC,OADAV,kBANN","file":"19-160a8906c4de34299d6e.js","sourcesContent":["import { RefObject } from 'react';\n\nlet intersectionObserver: IntersectionObserver;\n\nexport function createIntersectionObserver(callback: Function): any {\n  // if we don't support intersectionObserver we don't lazy load (Sorry IE 11).\n  if (!(`IntersectionObserver` in window)) {\n    return function observe() {\n      callback();\n      return function unobserve() {};\n    };\n  }\n\n  if (!intersectionObserver) {\n    intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            callback();\n          }\n        });\n      },\n      {\n        // TODO tweak\n        rootMargin: '150%',\n      }\n    );\n  }\n\n  return function observe(element: RefObject<HTMLElement>) {\n    intersectionObserver.observe(element.current);\n\n    return function unobserve() {\n      if (intersectionObserver && element.current) {\n        intersectionObserver.unobserve(element.current);\n      }\n    };\n  };\n}\n"],"sourceRoot":""}
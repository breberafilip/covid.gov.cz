{"version":3,"sources":["webpack:///./src/components/measure-detail/measure-detail.tsx","webpack:///./src/templates/measures/page.tsx","webpack:///./src/components/time/time.tsx","webpack:///./src/components/subtitle/subtitle.module.scss","webpack:///./src/components/topic-detail/topic-detail.module.scss","webpack:///./src/components/headline/headline.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/components/subtitle/subtitle.tsx","webpack:///./src/components/topic-detail/topic-detail.tsx","webpack:///./node_modules/@material-ui/icons/esm/Room.js","webpack:///./node_modules/@material-ui/icons/esm/Event.js","webpack:///./src/components/marker/marker.tsx","webpack:///./src/components/breadcrumb/breadcrumb.module.scss"],"names":["measure","hasSourceLink","Boolean","hasRegion","hasTimeConstraint","breadcrumbItems","title","I18n","url","alias","subtitle","processedContent","processed","className","regions","region","displayTime","validFrom","validTo","valid_to","to","uri","query","data","pageContext","description","pagePath","htmlLanguage","langcode","datePublished","dateModified","langCode","isBlogPost","body","datetime","prefix","suffix","dateConfig","year","month","day","hour","minute","timeZone","dateTime","Date","toLocaleString","module","exports","children","styles","headline","getBreadcrumbClasses","variant","classNames","classes","items","getItemClasses","index","aria-label","key","item","isNavItem","topicDetail","dangerouslySetInnerHTML","__html","createSvgIcon","createElement","d","Marker","icon","RegionsMarker","TimeMarker"],"mappings":"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","file":"component---src-templates-measures-page-tsx-96fc6e93720f57b284a1.js","sourcesContent":["import React from 'react';\n\nimport I18n from '@/components/i18n';\nimport Link from '@/components/link';\n\nimport { IMeasureDetailFragment } from '@graphql-types';\nimport { graphql } from 'gatsby';\nimport TopicDetail from '../topic-detail';\nimport { RegionsMarker, TimeMarker } from '../marker';\n\ninterface IProps {\n  measure: IMeasureDetailFragment;\n}\n\nconst MeasureDetail: React.FC<IProps> = ({ measure }) => {\n  const hasSourceLink = Boolean(measure.source);\n  const hasRegion = Boolean(measure.relationships.region.length);\n  const hasTimeConstraint = Boolean(measure.valid_from || measure.valid_to);\n  return (\n    <TopicDetail\n      breadcrumbItems={[\n        { title: I18n('home'), url: '/' },\n        {\n          title: I18n('current_measures'),\n          url: I18n(`slug_measures`),\n        },\n        {\n          title: measure.relationships?.situation_type?.name,\n          url: measure.relationships?.situation_type?.path?.alias,\n        },\n        measure.title,\n      ]}\n      title={measure.title}\n      subtitle={measure.norm}\n      processedContent={measure?.content?.processed}\n    >\n      {(hasRegion || hasTimeConstraint) && (\n        <div className=\"mt-2\">\n          <h3 className=\"mb-1 color-blue-dark\">{I18n('location_validity')}</h3>\n          {hasRegion && (\n            <RegionsMarker regions={measure.relationships.region} />\n          )}\n          {hasTimeConstraint && (\n            <TimeMarker\n              displayTime\n              validFrom={measure.valid_from}\n              validTo={measure.valid_to}\n            />\n          )}\n        </div>\n      )}\n      {hasSourceLink && (\n        <div className=\"mt-2\">\n          <hr />\n          <h3 className=\"mb-1 color-blue-dark\">{I18n('related')}</h3>\n          <div>\n            <Link className=\"color-blue mb-1\" to={measure.source.uri}>\n              {measure.source.title}\n            </Link>\n          </div>\n        </div>\n      )}\n    </TopicDetail>\n  );\n};\n\nexport const query = graphql`\n  fragment MeasureDetail on measure {\n    title\n    norm\n    content: description {\n      processed\n    }\n    source {\n      uri\n      title\n    }\n    relationships {\n      region {\n        name\n      }\n      situation_type: measure_type {\n        name\n        path {\n          alias\n        }\n      }\n      related_situations: situation {\n        title\n      }\n    }\n    path {\n      alias\n    }\n    changed\n    valid_from\n    valid_to\n  }\n`;\n\nexport default MeasureDetail;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { IMeasurePageQueryQuery, ISitePageContext } from '@graphql-types';\nimport { SchemaComp } from '@/components/schema/schema';\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport Layout from '@/layouts/default-layout';\nimport I18n from '@/components/i18n';\nimport MeasureDetail from '@/components/measure-detail';\n\ninterface IProps {\n  data: IMeasurePageQueryQuery;\n  pageContext: ISitePageContext;\n}\n\nconst Page: React.FC<IProps> = ({ data, pageContext }) => {\n  return (\n    <Layout pageContext={pageContext}>\n      <Seo\n        title={data.measure.title}\n        description={\n          data.measure.meta_description ||\n          I18n('current_measures_overview_meta')\n        }\n        pagePath={data.measure.path.alias}\n        htmlLanguage={data.measure.langcode}\n      />\n      <SchemaComp\n        datePublished={data.measure.valid_from}\n        dateModified={data.measure.changed}\n        title={data.measure.title}\n        langCode={data.measure.langcode}\n        isBlogPost\n        body={\n          data.measure.content\n            ? data.measure.content.processed\n            : data.measure.meta_description\n        }\n        description={data.measure.meta_description}\n        breadcrumbItems={[\n          { title: I18n('home'), url: '/' },\n          {\n            title: I18n('current_measures'),\n            url: I18n(`slug_measures`),\n          },\n          {\n            title: data.measure.relationships?.situation_type?.name,\n            url: data.measure.relationships?.situation_type?.path?.alias,\n          },\n          data.measure.title,\n        ]}\n      />\n      <MeasureDetail measure={data.measure} />\n    </Layout>\n  );\n};\nexport default Page;\n\nexport const query = graphql`\n  query MeasurePageQuery($slug: String!, $langCode: String!) {\n    measure(path: { alias: { eq: $slug }, langcode: { eq: $langCode } }) {\n      title\n      meta_description\n      content: description {\n        processed\n      }\n      path {\n        alias\n      }\n      langcode\n      valid_from\n      ...MeasureDetail\n    }\n  }\n`;\n","import React from 'react';\n\ninterface Props {\n  datetime: string;\n  displayTime?: boolean;\n  prefix?: string;\n  suffix?: string;\n}\n\nconst Time: React.FC<Props> = ({\n  datetime,\n  displayTime,\n  prefix,\n  suffix = ' ',\n}) => {\n  const dateConfig = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: displayTime ? '2-digit' : undefined,\n    minute: displayTime ? '2-digit' : undefined,\n    timeZone: 'Europe/Prague',\n  };\n  return (\n    <time dateTime={datetime}>\n      {prefix}\n      {new Date(datetime).toLocaleString('cs-CZ', dateConfig)}\n      {suffix}\n    </time>\n  );\n};\n\nexport default Time;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"subtitle-module--subtitle--3-_JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topicDetail\":\"topic-detail-module--topicDetail--kRP4b\"};","import React from 'react';\n\nimport styles from './headline.module.scss';\n\nconst Headline: React.FC = ({ children }) => {\n  return <h1 className={styles.headline}>{children}</h1>;\n};\n\nexport default Headline;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  title={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"headline-module--headline--2EZlD\"};","import React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './subtitle.module.scss';\n\nconst Subtitle: React.FC<{ className?: string }> = ({\n  children,\n  className,\n}) => {\n  return <p className={classNames(styles.subtitle, className)}>{children}</p>;\n};\n\nexport default Subtitle;\n","import React from 'react';\n\nimport Container from '@/components/container';\nimport Breadcrumb from '@/components/breadcrumb';\nimport Headline from '@/components/headline';\nimport Subtitle from '@/components/subtitle';\n\nimport styles from './topic-detail.module.scss';\n\ninterface IProps {\n  breadcrumbItems: React.ComponentProps<typeof Breadcrumb>['items'];\n  title: string;\n  processedContent: string;\n  subtitle?: string;\n}\n\nconst TopicDetail: React.FC<IProps> = ({\n  breadcrumbItems,\n  title,\n  processedContent,\n  children,\n  subtitle,\n}) => {\n  return (\n    <div className={styles.topicDetail}>\n      <Container>\n        <div className=\"pt-1\">\n          <Breadcrumb items={breadcrumbItems} variant=\"inverse\" />\n        </div>\n        <div className=\"mt-3\">\n          <Headline>{title}</Headline>\n        </div>\n        <article className=\"bg-white rounded p-2 pb-3 mb-1\">\n          {subtitle && <Subtitle>{subtitle}</Subtitle>}\n          <div\n            dangerouslySetInnerHTML={{\n              __html: processedContent,\n            }}\n          />\n          {children}\n        </article>\n      </Container>\n    </div>\n  );\n};\n\nexport default TopicDetail;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Room');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"\n}), 'Event');","import React from 'react';\n\nimport { Room, Event } from '@material-ui/icons';\nimport { IRegion } from '@graphql-types';\nimport Time from '../time';\nimport I18n from '../i18n';\n\ninterface IProps {\n  icon: React.ReactNode;\n}\n\nconst Marker: React.FC<IProps> = ({ icon, children }) => {\n  return (\n    <div className=\"d-flex align-items-center mb-1 color-blue\">\n      {icon}\n      &nbsp;\n      <span className=\"text-uppercase font-weight-medium\">{children}</span>\n    </div>\n  );\n};\n\ninterface IRegionsMarkerProps {\n  regions: Pick<IRegion, 'name'>[];\n}\n\nexport const RegionsMarker: React.FC<IRegionsMarkerProps> = ({ regions }) => (\n  <Marker icon={<Room />}>\n    {regions.map((region) => region.name).join(',')}\n  </Marker>\n);\n\ninterface ITimeProps {\n  validFrom: string;\n  validTo: string;\n  displayTime: boolean;\n}\n\nexport const TimeMarker: React.FC<ITimeProps> = ({\n  validFrom,\n  validTo,\n  displayTime,\n}) => (\n  <Marker icon={<Event />}>\n    {validFrom && (\n      <Time\n        displayTime={displayTime}\n        datetime={validFrom}\n        prefix={`${I18n('from')} `}\n      />\n    )}\n    {validTo && (\n      <Time\n        displayTime={displayTime}\n        datetime={validTo}\n        prefix={`${I18n('to')} `}\n      />\n    )}\n  </Marker>\n);\n\nexport default Marker;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};"],"sourceRoot":""}
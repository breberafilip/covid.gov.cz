{"version":3,"sources":["webpack:///./src/components/category-item-list/category-item-list.module.scss","webpack:///./src/components/schema/index.tsx","webpack:///./src/components/headline/headline.tsx","webpack:///./src/templates/lists/measures.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/components/category-item/category-item.tsx","webpack:///./node_modules/@material-ui/icons/esm/KeyboardArrowLeft.js","webpack:///./src/components/category-item-list/category-item-list.tsx","webpack:///./src/components/category-item-list/measure-area-list.tsx","webpack:///./src/components/category-item-list/situation-area-list.tsx","webpack:///./src/components/breadcrumb/breadcrumb.module.scss","webpack:///./src/components/category-item/category-item.module.scss"],"names":["module","exports","iconCode","className","children","classNames","styles","code","data","pageContext","title","I18n","description","pagePath","htmlLanguage","langCode","isBlogPost","isSpecialList","breadcrumbItems","url","items","variant","nodes","query","getBreadcrumbClasses","classes","getItemClasses","index","aria-label","key","item","isNavItem","to","name","path","isActive","categoryItemTitle","chevron","style","fontSize","createSvgIcon","createElement","d","titleIconCode","linkBack","lang","gLang","collator","Intl","a","b","styledTitle","i","acc","wrapper","header","icon","dangerouslySetInnerHTML","__html","slug","location","useLocation","listItems","relationships","id","pathname"],"mappings":"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","file":"component---src-templates-lists-measures-tsx-abb75172a65a29cd7ee6.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"category-item-list-module--wrapper--2l6te\",\"header\":\"category-item-list-module--header--32CZs\",\"icon\":\"category-item-list-module--icon--3Y5rx\",\"chevron\":\"category-item-list-module--chevron--cmaV2\",\"linkBack\":\"category-item-list-module--linkBack--K051_\"};","export { default } from './schema';\n","import classNames from 'classnames';\nimport React from 'react';\nimport ContentIcon from '../content-icon';\n\nimport styles from './headline.module.scss';\n\ninterface IProps {\n  iconCode?: string;\n  className?: string;\n}\n\nconst Headline: React.FC<IProps> = ({ iconCode, className, children }) => {\n  return (\n    <div className={classNames(className, styles.headlineWrapper)}>\n      <h1 className={classNames(styles.headline)}>\n        {iconCode && (\n          <ContentIcon className={styles.headlineIcon} code={iconCode} />\n        )}\n        <span>{children}</span>\n      </h1>\n      <hr />\n    </div>\n  );\n};\n\nexport default Headline;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Container from '@/components/container';\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport { IMeasureTypeQueryQuery, ISitePageContext } from '@graphql-types';\nimport Breadcrumb from '@/components/breadcrumb';\nimport Headline from '@/components/headline';\nimport Layout from '@/layouts/default-layout';\nimport I18n from '@/components/i18n';\nimport SchemaComp from '@/components/schema';\nimport { MeasureAreaList } from '@/components/category-item-list';\n\ninterface IProps {\n  data: IMeasureTypeQueryQuery;\n  pageContext: ISitePageContext;\n}\n\nconst Measures: React.FC<IProps> = ({ data, pageContext }) => {\n  return (\n    <Layout pageContext={pageContext}>\n      <Seo\n        title={I18n('current_measures_overview')}\n        description={I18n('current_measures_overview_meta')}\n        pagePath={I18n('slug_measures')}\n        htmlLanguage={pageContext.langCode}\n      />\n      <SchemaComp\n        langCode={pageContext.langCode}\n        description={I18n('current_measures_overview_meta')}\n        isBlogPost={false}\n        isSpecialList\n        title={I18n('current_measures_overview')}\n        breadcrumbItems={[\n          { title: I18n('home'), url: '/' },\n          { title: I18n('current_measures'), url: I18n('slug_measures') },\n        ]}\n      />\n      <Container className=\"pt-1\">\n        <Breadcrumb\n          items={[\n            { title: I18n('home'), url: '/' },\n            { title: I18n('current_measures'), url: I18n('slug_measures') },\n          ]}\n          variant=\"inverse\"\n        />\n      </Container>\n      <Container className=\"mt-3 d-block d-md-none\">\n        <Headline>{I18n('current_measures_overview')}</Headline>\n      </Container>\n      <Container className=\"mt-3\">\n        <MeasureAreaList data={data.allMeasureType.nodes} />\n      </Container>\n    </Layout>\n  );\n};\nexport default Measures;\n\nexport const query = graphql`\n  query MeasureTypeQuery($langCode: String!) {\n    allMeasureType(filter: { langcode: { eq: $langCode } }) {\n      nodes {\n        ...MeasureArea\n      }\n    }\n  }\n`;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  title={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headlineWrapper\":\"headline-module--headlineWrapper--1KseK\",\"headline\":\"headline-module--headline--2EZlD\",\"headlineIcon\":\"headline-module--headlineIcon--3wPWI\"};","import classNames from 'classnames';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport Link from '@/components/link';\nimport ContentIcon from '@/components/content-icon/content-icon';\nimport React, { FC } from 'react';\n\nimport styles from './category-item.module.scss';\n\ntype Props = {\n  id: string;\n  name: string;\n  path: string;\n  iconCode?: string;\n  isActive: boolean;\n};\n\nconst CategoryItem: FC<Props> = ({ name, path, iconCode, isActive }) => {\n  return (\n    <Link\n      to={path}\n      className={classNames(styles.categoryItem, 'py-2', {\n        [styles.isActive]: isActive,\n      })}\n    >\n      {iconCode && (\n        <ContentIcon className={styles.categoryItemIcon} code={iconCode} />\n      )}\n      <span className={styles.categoryItemTitle}>{name}</span>\n      <div className={styles.chevron}>\n        <KeyboardArrowRight style={{ fontSize: 18 }} className=\"color-yellow\" />\n      </div>\n    </Link>\n  );\n};\n\nexport default CategoryItem;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');","import React, { FC } from 'react';\nimport styles from './category-item-list.module.scss';\nimport CategoryItem from '../category-item/category-item';\nimport I18n, { gLang } from '@/components/i18n';\nimport Link from '@/components/link';\nimport { KeyboardArrowLeft } from '@material-ui/icons';\nimport ContentIcon from '../content-icon';\n\ntype Props = {\n  title: string;\n  titleIconCode?: string;\n  linkBack?: {\n    title: string;\n    slug: string;\n  };\n  items: React.ComponentProps<typeof CategoryItem>[];\n};\n\nconst makeFirstWordBold = (sentence: string) =>\n  sentence.split(' ').reduce((acc, curr, i) => {\n    if (i === 0) {\n      return (acc += `<strong>${curr}</strong>`);\n    }\n    return (acc += ' ' + curr);\n  }, '');\n\nconst CategoryItemList: FC<Props> = ({\n  items,\n  title,\n  titleIconCode,\n  linkBack,\n}) => {\n  const lang = gLang();\n  const collator = new Intl.Collator([lang]);\n  items.sort((a, b) => collator.compare(a.name, b.name));\n\n  const styledTitle = makeFirstWordBold(title);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.header}>\n        <h2>\n          {titleIconCode && (\n            <ContentIcon code={titleIconCode} className={styles.icon} />\n          )}\n          <span dangerouslySetInnerHTML={{ __html: styledTitle }} />\n        </h2>\n        {linkBack ? (\n          <Link className={styles.linkBack} to={linkBack.slug}>\n            <KeyboardArrowLeft\n              style={{ fontSize: 18 }}\n              className={styles.chevron}\n            />{' '}\n            <span>\n              {I18n('back_to')}&nbsp;{linkBack.title}\n            </span>\n          </Link>\n        ) : (\n          <hr />\n        )}\n      </div>\n      {items.map((item, i) => (\n        <CategoryItem key={`${item.iconCode}${i}`} {...item} />\n      ))}\n    </div>\n  );\n};\n\nexport default CategoryItemList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { useLocation } from '@reach/router';\nimport { IMeasureAreaFragment } from 'graphql-types';\nimport CategoryItemList from './category-item-list';\nimport I18n from '../i18n';\n\ninterface IProps {\n  data: IMeasureAreaFragment[];\n}\n\nconst MeasureAreaList: React.FC<IProps> = ({ data }) => {\n  const location = useLocation();\n\n  const listItems = data\n    .filter(({ relationships }) => relationships.measure !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === location.pathname,\n    }));\n  return (\n    <CategoryItemList items={listItems} title={I18n('current_measures')} />\n  );\n};\n\nexport const query = graphql`\n  fragment MeasureArea on measure_type {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      measure {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default MeasureAreaList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ISituationAreaFragment } from 'graphql-types';\nimport { useLocation } from '@reach/router';\nimport CategoryItemList from './category-item-list';\nimport I18n from '../i18n';\n\ninterface IProps {\n  data: ISituationAreaFragment[];\n}\n\nconst SituationAreaList: React.FC<IProps> = ({ data }) => {\n  const location = useLocation();\n\n  const listItems = data\n    .filter(({ relationships }) => relationships.situation !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === location.pathname,\n    }));\n  return <CategoryItemList items={listItems} title={I18n('life_situations')} />;\n};\n\nexport const query = graphql`\n  fragment SituationArea on area {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      situation {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default SituationAreaList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categoryItem\":\"category-item-module--categoryItem--3V8HX\",\"chevron\":\"category-item-module--chevron--D9HLp\",\"categoryItemIcon\":\"category-item-module--categoryItemIcon--3wAWD\",\"categoryItemTitle\":\"category-item-module--categoryItemTitle--ErF2o\",\"isActive\":\"category-item-module--isActive--3zXaE\"};"],"sourceRoot":""}